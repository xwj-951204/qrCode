{"version":3,"file":"js/863.aa40ca2f.js","mappings":"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CpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GA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","sources":["webpack://vue-1/./node_modules/_canvas@2.9.0@canvas/browser.js","webpack://vue-1/./node_modules/_canvas@2.9.0@canvas/lib/parse-font.js","webpack://vue-1/./node_modules/_js-binary-schema-parser@2.0.3@js-binary-schema-parser/lib/index.js","webpack://vue-1/./node_modules/_js-binary-schema-parser@2.0.3@js-binary-schema-parser/lib/parsers/uint8.js","webpack://vue-1/./node_modules/_js-binary-schema-parser@2.0.3@js-binary-schema-parser/lib/schemas/gif.js","webpack://vue-1/./src/views/Test.vue","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/packages/vue-qr.vue","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/packages/util.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/packages/readAsArrayBuffer.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/gifuct-js/deinterlace.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/gifuct-js/lzw.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/gifuct-js/index.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/qrcode.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/gif.js/TypedNeuQuant.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/gif.js/LZWEncoder.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/gif.js/GIFEncoder.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/lib/awesome-qr.js","webpack://vue-1/./node_modules/_vue-qr@3.2.4@vue-qr/src/packages/vue-qr.vue?7b0e","webpack://vue-1/./src/views/Test.vue?0fb2"],"sourcesContent":["/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\nconst styles = 'italic|oblique'\nconst variants = 'small-caps'\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = str => {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  const substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loop = exports.conditional = exports.parse = void 0;\n\nvar parse = function parse(stream, schema) {\n  var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : result;\n\n  if (Array.isArray(schema)) {\n    schema.forEach(function (partSchema) {\n      return parse(stream, partSchema, result, parent);\n    });\n  } else if (typeof schema === 'function') {\n    schema(stream, result, parent, parse);\n  } else {\n    var key = Object.keys(schema)[0];\n\n    if (Array.isArray(schema[key])) {\n      parent[key] = {};\n      parse(stream, schema[key], result, parent[key]);\n    } else {\n      parent[key] = schema[key](stream, result, parent, parse);\n    }\n  }\n\n  return result;\n};\n\nexports.parse = parse;\n\nvar conditional = function conditional(schema, conditionFunc) {\n  return function (stream, result, parent, parse) {\n    if (conditionFunc(stream, result, parent)) {\n      parse(stream, schema, result, parent);\n    }\n  };\n};\n\nexports.conditional = conditional;\n\nvar loop = function loop(schema, continueFunc) {\n  return function (stream, result, parent, parse) {\n    var arr = [];\n    var lastStreamPos = stream.pos;\n\n    while (continueFunc(stream, result, parent)) {\n      var newParent = {};\n      parse(stream, schema, result, newParent); // cases when whole file is parsed but no termination is there and stream position is not getting updated as well\n      // it falls into infinite recursion, null check to avoid the same\n\n      if (stream.pos === lastStreamPos) {\n        break;\n      }\n\n      lastStreamPos = stream.pos;\n      arr.push(newParent);\n    }\n\n    return arr;\n  };\n};\n\nexports.loop = loop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readBits = exports.readArray = exports.readUnsigned = exports.readString = exports.peekBytes = exports.readBytes = exports.peekByte = exports.readByte = exports.buildStream = void 0;\n\n// Default stream and parsers for Uint8TypedArray data type\nvar buildStream = function buildStream(uint8Data) {\n  return {\n    data: uint8Data,\n    pos: 0\n  };\n};\n\nexports.buildStream = buildStream;\n\nvar readByte = function readByte() {\n  return function (stream) {\n    return stream.data[stream.pos++];\n  };\n};\n\nexports.readByte = readByte;\n\nvar peekByte = function peekByte() {\n  var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function (stream) {\n    return stream.data[stream.pos + offset];\n  };\n};\n\nexports.peekByte = peekByte;\n\nvar readBytes = function readBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos += length);\n  };\n};\n\nexports.readBytes = readBytes;\n\nvar peekBytes = function peekBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos + length);\n  };\n};\n\nexports.peekBytes = peekBytes;\n\nvar readString = function readString(length) {\n  return function (stream) {\n    return Array.from(readBytes(length)(stream)).map(function (value) {\n      return String.fromCharCode(value);\n    }).join('');\n  };\n};\n\nexports.readString = readString;\n\nvar readUnsigned = function readUnsigned(littleEndian) {\n  return function (stream) {\n    var bytes = readBytes(2)(stream);\n    return littleEndian ? (bytes[1] << 8) + bytes[0] : (bytes[0] << 8) + bytes[1];\n  };\n};\n\nexports.readUnsigned = readUnsigned;\n\nvar readArray = function readArray(byteSize, totalOrFunc) {\n  return function (stream, result, parent) {\n    var total = typeof totalOrFunc === 'function' ? totalOrFunc(stream, result, parent) : totalOrFunc;\n    var parser = readBytes(byteSize);\n    var arr = new Array(total);\n\n    for (var i = 0; i < total; i++) {\n      arr[i] = parser(stream);\n    }\n\n    return arr;\n  };\n};\n\nexports.readArray = readArray;\n\nvar subBitsTotal = function subBitsTotal(bits, startIndex, length) {\n  var result = 0;\n\n  for (var i = 0; i < length; i++) {\n    result += bits[startIndex + i] && Math.pow(2, length - i - 1);\n  }\n\n  return result;\n};\n\nvar readBits = function readBits(schema) {\n  return function (stream) {\n    var _byte = readByte()(stream); // convert the byte to bit array\n\n\n    var bits = new Array(8);\n\n    for (var i = 0; i < 8; i++) {\n      bits[7 - i] = !!(_byte & 1 << i);\n    } // convert the bit array to values based on the schema\n\n\n    return Object.keys(schema).reduce(function (res, key) {\n      var def = schema[key];\n\n      if (def.length) {\n        res[key] = subBitsTotal(bits, def.index, def.length);\n      } else {\n        res[key] = bits[def.index];\n      }\n\n      return res;\n    }, {});\n  };\n};\n\nexports.readBits = readBits;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ = require(\"../\");\n\nvar _uint = require(\"../parsers/uint8\");\n\n// a set of 0x00 terminated subblocks\nvar subBlocksSchema = {\n  blocks: function blocks(stream) {\n    var terminator = 0x00;\n    var chunks = [];\n    var streamSize = stream.data.length;\n    var total = 0;\n\n    for (var size = (0, _uint.readByte)()(stream); size !== terminator; size = (0, _uint.readByte)()(stream)) {\n      // size becomes undefined for some case when file is corrupted and  terminator is not proper \n      // null check to avoid recursion\n      if (!size) break; // catch corrupted files with no terminator\n\n      if (stream.pos + size >= streamSize) {\n        var availableSize = streamSize - stream.pos;\n        chunks.push((0, _uint.readBytes)(availableSize)(stream));\n        total += availableSize;\n        break;\n      }\n\n      chunks.push((0, _uint.readBytes)(size)(stream));\n      total += size;\n    }\n\n    var result = new Uint8Array(total);\n    var offset = 0;\n\n    for (var i = 0; i < chunks.length; i++) {\n      result.set(chunks[i], offset);\n      offset += chunks[i].length;\n    }\n\n    return result;\n  }\n}; // global control extension\n\nvar gceSchema = (0, _.conditional)({\n  gce: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    byteSize: (0, _uint.readByte)()\n  }, {\n    extras: (0, _uint.readBits)({\n      future: {\n        index: 0,\n        length: 3\n      },\n      disposal: {\n        index: 3,\n        length: 3\n      },\n      userInput: {\n        index: 6\n      },\n      transparentColorGiven: {\n        index: 7\n      }\n    })\n  }, {\n    delay: (0, _uint.readUnsigned)(true)\n  }, {\n    transparentColorIndex: (0, _uint.readByte)()\n  }, {\n    terminator: (0, _uint.readByte)()\n  }]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xf9;\n}); // image pipeline block\n\nvar imageSchema = (0, _.conditional)({\n  image: [{\n    code: (0, _uint.readByte)()\n  }, {\n    descriptor: [{\n      left: (0, _uint.readUnsigned)(true)\n    }, {\n      top: (0, _uint.readUnsigned)(true)\n    }, {\n      width: (0, _uint.readUnsigned)(true)\n    }, {\n      height: (0, _uint.readUnsigned)(true)\n    }, {\n      lct: (0, _uint.readBits)({\n        exists: {\n          index: 0\n        },\n        interlaced: {\n          index: 1\n        },\n        sort: {\n          index: 2\n        },\n        future: {\n          index: 3,\n          length: 2\n        },\n        size: {\n          index: 5,\n          length: 3\n        }\n      })\n    }]\n  }, (0, _.conditional)({\n    lct: (0, _uint.readArray)(3, function (stream, result, parent) {\n      return Math.pow(2, parent.descriptor.lct.size + 1);\n    })\n  }, function (stream, result, parent) {\n    return parent.descriptor.lct.exists;\n  }), {\n    data: [{\n      minCodeSize: (0, _uint.readByte)()\n    }, subBlocksSchema]\n  }]\n}, function (stream) {\n  return (0, _uint.peekByte)()(stream) === 0x2c;\n}); // plain text block\n\nvar textSchema = (0, _.conditional)({\n  text: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    preData: function preData(stream, result, parent) {\n      return (0, _uint.readBytes)(parent.text.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0x01;\n}); // application block\n\nvar applicationSchema = (0, _.conditional)({\n  application: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    id: function id(stream, result, parent) {\n      return (0, _uint.readString)(parent.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xff;\n}); // comment block\n\nvar commentSchema = (0, _.conditional)({\n  comment: [{\n    codes: (0, _uint.readBytes)(2)\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xfe;\n});\nvar schema = [{\n  header: [{\n    signature: (0, _uint.readString)(3)\n  }, {\n    version: (0, _uint.readString)(3)\n  }]\n}, {\n  lsd: [{\n    width: (0, _uint.readUnsigned)(true)\n  }, {\n    height: (0, _uint.readUnsigned)(true)\n  }, {\n    gct: (0, _uint.readBits)({\n      exists: {\n        index: 0\n      },\n      resolution: {\n        index: 1,\n        length: 3\n      },\n      sort: {\n        index: 4\n      },\n      size: {\n        index: 5,\n        length: 3\n      }\n    })\n  }, {\n    backgroundColorIndex: (0, _uint.readByte)()\n  }, {\n    pixelAspectRatio: (0, _uint.readByte)()\n  }]\n}, (0, _.conditional)({\n  gct: (0, _uint.readArray)(3, function (stream, result) {\n    return Math.pow(2, result.lsd.gct.size + 1);\n  })\n}, function (stream, result) {\n  return result.lsd.gct.exists;\n}), // content frames\n{\n  frames: (0, _.loop)([gceSchema, applicationSchema, commentSchema, imageSchema, textSchema], function (stream) {\n    var nextCode = (0, _uint.peekByte)()(stream); // rather than check for a terminator, we should check for the existence\n    // of an ext or image block to avoid infinite loops\n    //var terminator = 0x3B;\n    //return nextCode !== terminator;\n\n    return nextCode === 0x21 || nextCode === 0x2c;\n  })\n}];\nvar _default = schema;\nexports[\"default\"] = _default;","<template>\r\n<HeadRouter />\r\n<div>\r\n    <div class=\"container\">\r\n        <el-row class=\"mgb20\">\r\n            <el-col :span=\"16\">\r\n                <el-button type=\"primary\" round @click=\"handleInsert\">添加数据</el-button>\r\n                <el-button type=\"primary\" round @click=\"handleUpdate\">刷新数据</el-button>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <el-button style=\"float:right\" type=\"danger\" @click=\"test\">清空数据</el-button>\r\n            </el-col>\r\n        </el-row>\r\n        <el-table :data=\"tableData\" border>\r\n            <el-table-column prop=\"num\" label=\"num\" width=\"80\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"name\" label=\"name\" align=\"center\">\r\n                <template #default=\"scope\">\r\n                    <a :href=client_host+scope.row.num target=\"_blank\">{{scope.row.name}}</a>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"age\" label=\"age\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"other\" align=\"center\" v-if=\"false\">\r\n                <template #default=\"scope\">\r\n                    <a :href=client_host+scope.row.num target=\"_blank\">{{scope.row.other}}</a>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"other\" :width=\"150\" align=\"center\">\r\n                <template #default=\"scope\">\r\n                    <vue-qr :text=client_host+scope.row.num :size=\"100\" :margin=\"0\" :logoSrc=\"require('@/assets/logo.png')\"></vue-qr>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"200\" align=\"center\">\r\n                <template #default=\"scope\">\r\n                    <el-button type=\"text\" icon=\"Edit\" @click=\"handleEdit(scope.row)\">编辑点检信息</el-button>\r\n                    <el-button type=\"text\" icon=\"Delete\" class=\"red\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</div>\r\n\r\n<!-- 编辑弹出框 -->\r\n<el-dialog title=\"上传服务\" v-model=\"editVisible\" width=\"500px\">\r\n    <el-form label-width=\"130px\">\r\n        <el-form-item label=\"num\">\r\n            <el-input v-model=\"editData.num\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"name\">\r\n            <el-input v-model=\"editData.name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"age\">\r\n            <el-input v-model=\"editData.age\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"other\">\r\n            <el-input v-model=\"editData.other\" />\r\n        </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n        <span class=\"dialog-footer\">\r\n            <el-button type=\"primary\" @click=\"handleInsertPost\">确 定</el-button>\r\n            <el-button @click=\"editVisible = false\">取 消</el-button>\r\n        </span>\r\n    </template>\r\n</el-dialog>\r\n\r\n<!-- 点检信息弹出框 -->\r\n<el-dialog title=\"点检信息\" v-model=\"checkListVisible\" width=\"500px\">\r\n    <div :model=\"checkList\">\r\n\r\n        <div v-for=\"(part, index) in checkList.parts\" :key=\"part.key\" :prop=\"'parts.' + index + '.part'\">\r\n            <el-card class=\"box-card\">\r\n                <template #header>\r\n                    <div class=\"card-header\">\r\n                        <el-input v-model=\"part.part\" size=\"large\" style=\"width:250px\">\r\n                            <template #prepend>设备名称：</template>\r\n                        </el-input>\r\n                        <div>\r\n                            <el-button icon=\"Plus\" circle @click=\"addPart(index)\"></el-button>\r\n                            <el-button icon=\"Minus\" circle @click=\"deletePart(index)\" v-if=\"checkList.parts.length!=1\"></el-button>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <el-table :data=\"part.contents\" border>\r\n                    <el-table-column label=\"点检内容\" width=\"120\" align=\"center\">\r\n                        <template #default=\"scope\">\r\n                            <el-input v-model=\"scope.row.content\" />\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"点检标准\" align=\"center\">\r\n                        <template #default=\"scope\">\r\n                            <el-input v-model=\"scope.row.standard\" />\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n                        <template #default=\"scope\">\r\n                            <el-button icon=\"Plus\" circle size=\"small\" @click=\"addContent(part.contents,scope.$index)\"></el-button>\r\n                            <el-button icon=\"Minus\" circle size=\"small\" @click=\"deleteContent(part.contents,scope.$index)\" v-if=\"part.contents.length!=1\"></el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n            </el-card>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <template #footer>\r\n        <span class=\"dialog-footer\">\r\n            <el-button type=\"primary\" @click=\"handleEditPost\">确 定</el-button>\r\n            <el-button @click=\"checkListVisible = false\">取 消</el-button>\r\n        </span>\r\n    </template>\r\n</el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport HeadRouter from '@/components/HeadRouter.vue'\r\nimport vueQr from 'vue-qr/src/packages/vue-qr.vue';\r\nimport {\r\n    ref\r\n} from \"vue\";\r\nimport {\r\n    ElNotification,\r\n    ElMessage,\r\n    ElMessageBox\r\n} from \"element-plus\";\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: \"Home\",\r\n    components: {\r\n        vueQr,\r\n        HeadRouter\r\n    },\r\n    setup() {\r\n        const client_host = \"http://\" + window.location.host + \"/#/check/\";\r\n        const server_host = \"192.168.14.100:3000\";\r\n        const select_num = ref(0);\r\n\r\n        const tableData = ref([]);\r\n        const editVisible = ref(false);\r\n        const checkListVisible = ref(false);\r\n        const editData = ref({\r\n            num: '',\r\n            name: '',\r\n            age: '',\r\n            other: ''\r\n        });\r\n        const checkList = ref({\r\n            parts: [{\r\n                part: '',\r\n                contents: [{\r\n                    content: '',\r\n                    standard: '',\r\n                }, ],\r\n            }, ],\r\n        });\r\n\r\n        const successBox = (msg) => {\r\n            ElNotification({\r\n                title: '成功',\r\n                message: msg,\r\n                type: 'success',\r\n            })\r\n        };\r\n        const errorBox = (msg) => {\r\n            ElNotification({\r\n                title: '错误',\r\n                message: msg,\r\n                type: 'error',\r\n            })\r\n        };\r\n\r\n        return {\r\n            client_host,\r\n            server_host,\r\n            select_num,\r\n\r\n            tableData,\r\n            editVisible,\r\n            checkListVisible,\r\n            editData,\r\n            checkList,\r\n\r\n            successBox,\r\n            errorBox,\r\n        }\r\n    },\r\n    methods: {\r\n        //主页面主要控件****************************************************//\r\n        handleUpdate() {\r\n            var that = this\r\n            axios\r\n                .get('http://' + that.server_host + '/checkList/refresh')\r\n                .then(function (response) {\r\n                    that.tableData = response.data.data\r\n                })\r\n                .catch(function (error) { // 请求失败处理\r\n                    console.log(error);\r\n                });\r\n        },\r\n        handleInsert() {\r\n            this.editData = {\r\n                num: '',\r\n                name: '',\r\n                age: '',\r\n                other: ''\r\n            }\r\n            this.editVisible = true\r\n        },\r\n        handleEdit(row) {\r\n            this.select_num = row.num\r\n            if (row.check_list == null) {\r\n                this.checkList = {\r\n                    parts: [{\r\n                        part: '',\r\n                        contents: [{\r\n                            content: '',\r\n                            standard: '',\r\n                        }, ],\r\n                    }, ],\r\n                };\r\n            } else {\r\n\r\n                this.checkList = JSON.parse(row.check_list)\r\n            }\r\n            this.checkListVisible = true\r\n        },\r\n        handleDelete(row) {\r\n            ElMessageBox.confirm(\"设备ID:【\" + row.num + \"】确定要删除吗？\", \"提示\", {\r\n                    type: \"warning\",\r\n                })\r\n                .then(() => {\r\n                    var that = this\r\n                    axios\r\n                        .get('http://' + that.server_host + '/checkList/delete/' + row.num)\r\n                        .then(function (response) {\r\n                            if (response.data.code != '200') {\r\n                                ElMessage.error(\"删除失败\");\r\n                            } else {\r\n                                ElMessage.success(\"删除成功\");\r\n                                that.handleUpdate();\r\n                            }\r\n                        })\r\n                        .catch(function (error) { // 请求失败处理\r\n                            ElMessage.error(\"请求失败\");\r\n                        });\r\n                })\r\n                .catch(() => {});\r\n        },\r\n\r\n        //添加数据页面控件**************************************************//\r\n        handleInsertPost() {\r\n            var that = this\r\n            axios.post('http://' + that.server_host + '/checkList/insert', that.editData)\r\n                .then(function (response) {\r\n                    that.handleUpdate();\r\n                    that.editVisible = false;\r\n                    ElMessage.success(\"添加成功!\");\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        //编辑点检信息页面控件\r\n        addPart(index) {\r\n            var new_part = {\r\n                part: '',\r\n                contents: [{\r\n                    content: '',\r\n                    standard: '',\r\n                }, ],\r\n            }\r\n            this.checkList.parts.splice(index + 1, 0, new_part);\r\n        },\r\n        deletePart(index) {\r\n            this.checkList.parts.splice(index, 1);\r\n        },\r\n        addContent(contents, index) {\r\n            var new_content = {\r\n                content: '',\r\n                standard: '',\r\n            }\r\n            contents.splice(index+1,0,new_content)\r\n        },\r\n        deleteContent(contents,index){\r\n            contents.splice(index,1)\r\n        },\r\n        handleEditPost(){\r\n            var that = this\r\n            axios.post('http://' + that.server_host + '/checkList/insertCheckList/' + that.select_num, that.checkList)\r\n                .then(function (response) {\r\n                    that.handleUpdate();\r\n                    that.checkListVisible = false;\r\n                    ElMessage.success(\"点检信息编辑成功!\");\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n\r\n        test() {\r\n            console.log('http://' + this.server_host + '/checkList/refresh')\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$nextTick(function () {\r\n            this.handleUpdate();\r\n        });\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n.card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.box-card {\r\n    text-align: left;\r\n    margin-bottom: 2px;\r\n}\r\n</style>\r\n","<template>\n  <img style=\"display: inline-block\" :src=\"imgUrl\" v-if=\"bindElement\" />\n</template>\n\n<script>\nimport { toBoolean } from \"./util.js\";\nimport readAsArrayBuffer from \"./readAsArrayBuffer\";\nimport { AwesomeQR } from \"../lib/awesome-qr\";\nexport default {\n  props: {\n    text: {\n      type: String,\n      required: true\n    },\n    qid: {\n      type: String\n    },\n    correctLevel: {\n      type: Number,\n      default: 1\n    },\n    size: {\n      type: Number,\n      default: 200\n    },\n    margin: {\n      type: Number,\n      default: 20\n    },\n    colorDark: {\n      type: String,\n      default: \"#000000\"\n    },\n    colorLight: {\n      type: String,\n      default: \"#FFFFFF\"\n    },\n    bgSrc: {\n      type: String,\n      default: undefined\n    },\n    background: {\n      type: String,\n      default: \"rgba(0,0,0,0)\"\n    },\n    backgroundDimming: {\n      type: String,\n      default: \"rgba(0,0,0,0)\"\n    },\n    logoSrc: {\n      type: String,\n      default: undefined\n    },\n    logoBackgroundColor: {\n      type: String,\n      default: \"rgba(255,255,255,1)\"\n    },\n    gifBgSrc: {\n      type: String,\n      default: undefined\n    },\n    logoScale: {\n      type: Number,\n      default: 0.2\n    },\n    logoMargin: {\n      type: Number,\n      default: 0\n    },\n    logoCornerRadius: {\n      type: Number,\n      default: 8\n    },\n    whiteMargin: {\n      type: [Boolean, String],\n      default: true\n    },\n    dotScale: {\n      type: Number,\n      default: 1\n    },\n    autoColor: {\n      type: [Boolean, String],\n      default: true\n    },\n    binarize: {\n      type: [Boolean, String],\n      default: false\n    },\n    binarizeThreshold: {\n      type: Number,\n      default: 128\n    },\n    callback: {\n      type: Function,\n      default: function() {\n        return undefined;\n      }\n    },\n    bindElement: {\n      type: Boolean,\n      default: true\n    },\n    backgroundColor: {\n      type: String,\n      default: \"#FFFFFF\"\n    },\n    components: {\n      default: function(){\n        return {\n          data: {\n            scale: 1\n          },\n          timing: {\n            scale: 1,\n            protectors: false\n          },\n          alignment: {\n            scale: 1,\n            protectors: false\n          },\n          cornerAlignment: {\n            scale: 1,\n            protectors: true\n          }\n        }\n      }\n    }\n  },\n  name: \"vue-qr\",\n  data() {\n    return {\n      imgUrl: \"\"\n    };\n  },\n  watch: {\n    $props: {\n      deep: true,\n      handler() {\n        this.main();\n      }\n    }\n  },\n  mounted() {\n    this.main();\n  },\n  methods: {\n    async main() {\n      // const that = this;\n      if (this.gifBgSrc) {\n        const gifImg = await readAsArrayBuffer(this.gifBgSrc);\n        const logoImg = this.logoSrc;\n\n        this.render(undefined, logoImg, gifImg);\n        return;\n      }\n      const bgImg = this.bgSrc;\n      const logoImg = this.logoSrc;\n      this.render(bgImg, logoImg);\n    },\n    async render(img, logoImg, gifBgSrc) {\n      const that = this;\n      // if (this.$isServer) {\n      //   return;\n      // }\n      // if (!this.AwesomeQR) {\n      //   this.AwesomeQR = AwesomeQR;\n      // }\n      new AwesomeQR({\n        gifBackground: gifBgSrc,\n        text: that.text,\n        size: that.size,\n        margin: that.margin,\n        colorDark: that.colorDark,\n        colorLight: that.colorLight,\n        backgroundColor: that.backgroundColor,\n        backgroundImage: img,\n        backgroundDimming: that.backgroundDimming,\n        logoImage: logoImg,\n        logoScale: that.logoScale,\n        logoBackgroundColor: that.logoBackgroundColor,\n        correctLevel: that.correctLevel,\n        logoMargin: that.logoMargin,\n        logoCornerRadius: that.logoCornerRadius,\n        whiteMargin: toBoolean(that.whiteMargin),\n        dotScale: that.dotScale,\n        autoColor: toBoolean(that.autoColor),\n        binarize: toBoolean(that.binarize),\n        binarizeThreshold: that.binarizeThreshold,\n        components: that.components\n      })\n        .draw()\n        .then(dataUri => {\n          this.imgUrl = dataUri;\n          that.callback && that.callback(dataUri, that.qid);\n        });\n    }\n  }\n};\n</script>\n","export function toBoolean(val) {\n  if (val === '') return val\n  return val === 'true' || val == '1'\n}\n","function readAsArrayBuffer(url, callback) {\n  return new Promise((resolve, reject) => {\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = \"blob\"; //设定返回数据类型为Blob\n    xhr.onload = function() {\n      var reader = new FileReader();\n      reader.onloadend = function() {\n          resolve(reader.result)\n      };\n      reader.readAsArrayBuffer(xhr.response); //xhr.response就是一个Blob，用FileReader读取\n    };\n    xhr.open(\"GET\", url);\n    xhr.send();\n  });\n}\nexport default readAsArrayBuffer","/**\n * Deinterlace function from https://github.com/shachaf/jsgif\n */\nexport const deinterlace = (pixels, width) => {\n    const newPixels = new Array(pixels.length);\n    const rows = pixels.length / width;\n    const cpRow = function (toRow, fromRow) {\n        const fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n        newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n    };\n    // See appendix E.\n    const offsets = [0, 4, 2, 1];\n    const steps = [8, 8, 4, 2];\n    var fromRow = 0;\n    for (var pass = 0; pass < 4; pass++) {\n        for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n            cpRow(toRow, fromRow);\n            fromRow++;\n        }\n    }\n    return newPixels;\n};\n","/**\n * javascript port of java LZW decompression\n * Original java author url: https://gist.github.com/devunwired/4479231\n */\nexport const lzw = (minCodeSize, data, pixelCount) => {\n    const MAX_STACK_SIZE = 4096;\n    const nullCode = -1;\n    const npix = pixelCount;\n    var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n    const dstPixels = new Array(pixelCount);\n    const prefix = new Array(MAX_STACK_SIZE);\n    const suffix = new Array(MAX_STACK_SIZE);\n    const pixelStack = new Array(MAX_STACK_SIZE + 1);\n    // Initialize GIF data stream decoder.\n    data_size = minCodeSize;\n    clear = 1 << data_size;\n    end_of_information = clear + 1;\n    available = clear + 2;\n    old_code = nullCode;\n    code_size = data_size + 1;\n    code_mask = (1 << code_size) - 1;\n    for (code = 0; code < clear; code++) {\n        prefix[code] = 0;\n        suffix[code] = code;\n    }\n    // Decode GIF pixel stream.\n    var datum, bits, count, first, top, pi, bi;\n    datum = bits = count = first = top = pi = bi = 0;\n    for (i = 0; i < npix;) {\n        if (top === 0) {\n            if (bits < code_size) {\n                // get the next byte\n                datum += data[bi] << bits;\n                bits += 8;\n                bi++;\n                continue;\n            }\n            // Get the next code.\n            code = datum & code_mask;\n            datum >>= code_size;\n            bits -= code_size;\n            // Interpret the code\n            if (code > available || code == end_of_information) {\n                break;\n            }\n            if (code == clear) {\n                // Reset decoder.\n                code_size = data_size + 1;\n                code_mask = (1 << code_size) - 1;\n                available = clear + 2;\n                old_code = nullCode;\n                continue;\n            }\n            if (old_code == nullCode) {\n                pixelStack[top++] = suffix[code];\n                old_code = code;\n                first = code;\n                continue;\n            }\n            in_code = code;\n            if (code == available) {\n                pixelStack[top++] = first;\n                code = old_code;\n            }\n            while (code > clear) {\n                pixelStack[top++] = suffix[code];\n                code = prefix[code];\n            }\n            first = suffix[code] & 0xff;\n            pixelStack[top++] = first;\n            // add a new string to the table, but only if space is available\n            // if not, just continue with current table until a clear code is found\n            // (deferred clear code implementation as per GIF spec)\n            if (available < MAX_STACK_SIZE) {\n                prefix[available] = old_code;\n                suffix[available] = first;\n                available++;\n                if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {\n                    code_size++;\n                    code_mask += available;\n                }\n            }\n            old_code = in_code;\n        }\n        // Pop a pixel off the pixel stack.\n        top--;\n        dstPixels[pi++] = pixelStack[top];\n        i++;\n    }\n    for (i = pi; i < npix; i++) {\n        dstPixels[i] = 0; // clear missing pixels\n    }\n    return dstPixels;\n};\n","import GIF from 'js-binary-schema-parser/lib/schemas/gif';\nimport { parse } from 'js-binary-schema-parser';\nimport { buildStream } from 'js-binary-schema-parser/lib/parsers/uint8';\nimport { deinterlace } from './deinterlace';\nimport { lzw } from './lzw';\nexport const parseGIF = arrayBuffer => {\n    const byteData = new Uint8Array(arrayBuffer);\n    return parse(buildStream(byteData), GIF);\n};\nconst generatePatch = image => {\n    const totalPixels = image.pixels.length;\n    const patchData = new Uint8ClampedArray(totalPixels * 4);\n    for (var i = 0; i < totalPixels; i++) {\n        const pos = i * 4;\n        const colorIndex = image.pixels[i];\n        const color = image.colorTable[colorIndex];\n        patchData[pos] = color[0];\n        patchData[pos + 1] = color[1];\n        patchData[pos + 2] = color[2];\n        patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n    }\n    return patchData;\n};\nexport const decompressFrame = (frame, gct, buildImagePatch) => {\n    if (!frame.image) {\n        console.warn('gif frame does not have associated image.');\n        return;\n    }\n    const { image } = frame;\n    // get the number of pixels\n    const totalPixels = image.descriptor.width * image.descriptor.height;\n    // do lzw decompression\n    var pixels = lzw(image.data.minCodeSize, image.data.blocks, totalPixels);\n    // deal with interlacing if necessary\n    if (image.descriptor.lct.interlaced) {\n        pixels = deinterlace(pixels, image.descriptor.width);\n    }\n    const resultImage = {\n        pixels: pixels,\n        dims: {\n            top: frame.image.descriptor.top,\n            left: frame.image.descriptor.left,\n            width: frame.image.descriptor.width,\n            height: frame.image.descriptor.height\n        }\n    };\n    // color table\n    if (image.descriptor.lct && image.descriptor.lct.exists) {\n        resultImage.colorTable = image.lct;\n    }\n    else {\n        resultImage.colorTable = gct;\n    }\n    // add per frame relevant gce information\n    if (frame.gce) {\n        resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n        resultImage.disposalType = frame.gce.extras.disposal;\n        // transparency\n        if (frame.gce.extras.transparentColorGiven) {\n            resultImage.transparentIndex = frame.gce.transparentColorIndex;\n        }\n    }\n    // create canvas usable imagedata if desired\n    if (buildImagePatch) {\n        resultImage.patch = generatePatch(resultImage);\n    }\n    return resultImage;\n};\nexport const decompressFrames = (parsedGif, buildImagePatches) => {\n    return parsedGif.frames\n        .filter(f => f.image)\n        .map(f => decompressFrame(f, parsedGif.gct, buildImagePatches));\n};\n","//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n// Re-written in TypeScript by Makito <sumimakito@hotmail.com>\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\nfunction checkQRVersion(version, sText, nCorrectLevel) {\n    const length = _getUTF8Length(sText);\n    const i = version - 1;\n    let nLimit = 0;\n    switch (nCorrectLevel) {\n        case QRErrorCorrectLevel.L:\n            nLimit = QRCodeLimitLength[i][0];\n            break;\n        case QRErrorCorrectLevel.M:\n            nLimit = QRCodeLimitLength[i][1];\n            break;\n        case QRErrorCorrectLevel.Q:\n            nLimit = QRCodeLimitLength[i][2];\n            break;\n        case QRErrorCorrectLevel.H:\n            nLimit = QRCodeLimitLength[i][3];\n            break;\n    }\n    return length <= nLimit;\n}\nfunction _getTypeNumber(sText, nCorrectLevel) {\n    var nType = 1;\n    var length = _getUTF8Length(sText);\n    for (var i = 0, len = QRCodeLimitLength.length; i < len; i++) {\n        var nLimit = 0;\n        switch (nCorrectLevel) {\n            case QRErrorCorrectLevel.L:\n                nLimit = QRCodeLimitLength[i][0];\n                break;\n            case QRErrorCorrectLevel.M:\n                nLimit = QRCodeLimitLength[i][1];\n                break;\n            case QRErrorCorrectLevel.Q:\n                nLimit = QRCodeLimitLength[i][2];\n                break;\n            case QRErrorCorrectLevel.H:\n                nLimit = QRCodeLimitLength[i][3];\n                break;\n        }\n        if (length <= nLimit) {\n            break;\n        }\n        else {\n            nType++;\n        }\n    }\n    if (nType > QRCodeLimitLength.length) {\n        throw new Error(\"Too long data\");\n    }\n    return nType;\n}\nfunction _getUTF8Length(sText) {\n    var replacedText = encodeURI(sText)\n        .toString()\n        .replace(/\\%[0-9a-fA-F]{2}/g, \"a\");\n    return replacedText.length + (replacedText.length != Number(sText) ? 3 : 0);\n}\nclass QR8bitByte {\n    constructor(data) {\n        this.mode = QRMode.MODE_8BIT_BYTE;\n        this.parsedData = [];\n        this.data = data;\n        const byteArrays = [];\n        // Added to support UTF-8 Characters\n        for (let i = 0, l = this.data.length; i < l; i++) {\n            const byteArray = [];\n            const code = this.data.charCodeAt(i);\n            if (code > 0x10000) {\n                byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n                byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n                byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n                byteArray[3] = 0x80 | (code & 0x3f);\n            }\n            else if (code > 0x800) {\n                byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n                byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n                byteArray[2] = 0x80 | (code & 0x3f);\n            }\n            else if (code > 0x80) {\n                byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n                byteArray[1] = 0x80 | (code & 0x3f);\n            }\n            else {\n                byteArray[0] = code;\n            }\n            byteArrays.push(byteArray);\n        }\n        this.parsedData = Array.prototype.concat.apply([], byteArrays);\n        if (this.parsedData.length != this.data.length) {\n            this.parsedData.unshift(191);\n            this.parsedData.unshift(187);\n            this.parsedData.unshift(239);\n        }\n    }\n    getLength() {\n        return this.parsedData.length;\n    }\n    write(buffer) {\n        for (let i = 0, l = this.parsedData.length; i < l; i++) {\n            buffer.put(this.parsedData[i], 8);\n        }\n    }\n}\nexport class QRCodeModel {\n    constructor(typeNumber = -1, errorCorrectLevel = QRErrorCorrectLevel.L) {\n        this.moduleCount = 0;\n        this.dataList = [];\n        this.typeNumber = typeNumber;\n        this.errorCorrectLevel = errorCorrectLevel;\n        this.moduleCount = 0;\n        this.dataList = [];\n    }\n    addData(data) {\n        if (this.typeNumber <= 0) {\n            this.typeNumber = _getTypeNumber(data, this.errorCorrectLevel);\n        }\n        else if (this.typeNumber > 40) {\n            throw new Error(`Invalid QR version: ${this.typeNumber}`);\n        }\n        else {\n            if (!checkQRVersion(this.typeNumber, data, this.errorCorrectLevel)) {\n                throw new Error(`Data is too long for QR version: ${this.typeNumber}`);\n            }\n        }\n        const newData = new QR8bitByte(data);\n        this.dataList.push(newData);\n        this.dataCache = undefined;\n    }\n    isDark(row, col) {\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n            throw new Error(`${row},${col}`);\n        }\n        return this.modules[row][col];\n    }\n    getModuleCount() {\n        return this.moduleCount;\n    }\n    make() {\n        this.makeImpl(false, this.getBestMaskPattern());\n    }\n    makeImpl(test, maskPattern) {\n        this.moduleCount = this.typeNumber * 4 + 17;\n        this.modules = new Array(this.moduleCount);\n        for (let row = 0; row < this.moduleCount; row++) {\n            this.modules[row] = new Array(this.moduleCount);\n            for (let col = 0; col < this.moduleCount; col++) {\n                this.modules[row][col] = null;\n            }\n        }\n        this.setupPositionProbePattern(0, 0);\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\n        this.setupPositionAdjustPattern();\n        this.setupTimingPattern();\n        this.setupTypeInfo(test, maskPattern);\n        if (this.typeNumber >= 7) {\n            this.setupTypeNumber(test);\n        }\n        if (this.dataCache == null) {\n            this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n        }\n        this.mapData(this.dataCache, maskPattern);\n    }\n    setupPositionProbePattern(row, col) {\n        for (let r = -1; r <= 7; r++) {\n            if (row + r <= -1 || this.moduleCount <= row + r)\n                continue;\n            for (let c = -1; c <= 7; c++) {\n                if (col + c <= -1 || this.moduleCount <= col + c)\n                    continue;\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6)) ||\n                    (0 <= c && c <= 6 && (r == 0 || r == 6)) ||\n                    (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n                    this.modules[row + r][col + c] = true;\n                }\n                else {\n                    this.modules[row + r][col + c] = false;\n                }\n            }\n        }\n    }\n    getBestMaskPattern() {\n        if (Number.isInteger(this.maskPattern) && Object.values(QRMaskPattern).includes(this.maskPattern)) {\n            return this.maskPattern;\n        }\n        let minLostPoint = 0;\n        let pattern = 0;\n        for (let i = 0; i < 8; i++) {\n            this.makeImpl(true, i);\n            const lostPoint = QRUtil.getLostPoint(this);\n            if (i == 0 || minLostPoint > lostPoint) {\n                minLostPoint = lostPoint;\n                pattern = i;\n            }\n        }\n        return pattern;\n    }\n    setupTimingPattern() {\n        for (let r = 8; r < this.moduleCount - 8; r++) {\n            if (this.modules[r][6] != null) {\n                continue;\n            }\n            this.modules[r][6] = r % 2 == 0;\n        }\n        for (let c = 8; c < this.moduleCount - 8; c++) {\n            if (this.modules[6][c] != null) {\n                continue;\n            }\n            this.modules[6][c] = c % 2 == 0;\n        }\n    }\n    setupPositionAdjustPattern() {\n        const pos = QRUtil.getPatternPosition(this.typeNumber);\n        for (let i = 0; i < pos.length; i++) {\n            for (let j = 0; j < pos.length; j++) {\n                const row = pos[i];\n                const col = pos[j];\n                if (this.modules[row][col] != null) {\n                    continue;\n                }\n                for (let r = -2; r <= 2; r++) {\n                    for (let c = -2; c <= 2; c++) {\n                        if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n                            this.modules[row + r][col + c] = true;\n                        }\n                        else {\n                            this.modules[row + r][col + c] = false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    setupTypeNumber(test) {\n        const bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n        for (var i = 0; i < 18; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = mod;\n        }\n        for (var i = 0; i < 18; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n        }\n    }\n    setupTypeInfo(test, maskPattern) {\n        const data = (this.errorCorrectLevel << 3) | maskPattern;\n        const bits = QRUtil.getBCHTypeInfo(data);\n        for (var i = 0; i < 15; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 6) {\n                this.modules[i][8] = mod;\n            }\n            else if (i < 8) {\n                this.modules[i + 1][8] = mod;\n            }\n            else {\n                this.modules[this.moduleCount - 15 + i][8] = mod;\n            }\n        }\n        for (var i = 0; i < 15; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 8) {\n                this.modules[8][this.moduleCount - i - 1] = mod;\n            }\n            else if (i < 9) {\n                this.modules[8][15 - i - 1 + 1] = mod;\n            }\n            else {\n                this.modules[8][15 - i - 1] = mod;\n            }\n        }\n        this.modules[this.moduleCount - 8][8] = !test;\n    }\n    mapData(data, maskPattern) {\n        let inc = -1;\n        let row = this.moduleCount - 1;\n        let bitIndex = 7;\n        let byteIndex = 0;\n        for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n            if (col == 6)\n                col--;\n            while (true) {\n                for (let c = 0; c < 2; c++) {\n                    if (this.modules[row][col - c] == null) {\n                        let dark = false;\n                        if (byteIndex < data.length) {\n                            dark = ((data[byteIndex] >>> bitIndex) & 1) == 1;\n                        }\n                        const mask = QRUtil.getMask(maskPattern, row, col - c);\n                        if (mask) {\n                            dark = !dark;\n                        }\n                        this.modules[row][col - c] = dark;\n                        bitIndex--;\n                        if (bitIndex == -1) {\n                            byteIndex++;\n                            bitIndex = 7;\n                        }\n                    }\n                }\n                row += inc;\n                if (row < 0 || this.moduleCount <= row) {\n                    row -= inc;\n                    inc = -inc;\n                    break;\n                }\n            }\n        }\n    }\n    static createData(typeNumber, errorCorrectLevel, dataList) {\n        const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n        const buffer = new QRBitBuffer();\n        for (var i = 0; i < dataList.length; i++) {\n            const data = dataList[i];\n            buffer.put(data.mode, 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n            data.write(buffer);\n        }\n        let totalDataCount = 0;\n        for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n            throw new Error(`code length overflow. (${buffer.getLengthInBits()}>${totalDataCount * 8})`);\n        }\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n            buffer.put(0, 4);\n        }\n        while (buffer.getLengthInBits() % 8 != 0) {\n            buffer.putBit(false);\n        }\n        while (true) {\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCodeModel.PAD0, 8);\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCodeModel.PAD1, 8);\n        }\n        return QRCodeModel.createBytes(buffer, rsBlocks);\n    }\n    static createBytes(buffer, rsBlocks) {\n        let offset = 0;\n        let maxDcCount = 0;\n        let maxEcCount = 0;\n        const dcdata = new Array(rsBlocks.length);\n        const ecdata = new Array(rsBlocks.length);\n        for (var r = 0; r < rsBlocks.length; r++) {\n            const dcCount = rsBlocks[r].dataCount;\n            const ecCount = rsBlocks[r].totalCount - dcCount;\n            maxDcCount = Math.max(maxDcCount, dcCount);\n            maxEcCount = Math.max(maxEcCount, ecCount);\n            dcdata[r] = new Array(dcCount);\n            for (var i = 0; i < dcdata[r].length; i++) {\n                dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n            }\n            offset += dcCount;\n            const rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n            const rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n            const modPoly = rawPoly.mod(rsPoly);\n            ecdata[r] = new Array(rsPoly.getLength() - 1);\n            for (var i = 0; i < ecdata[r].length; i++) {\n                const modIndex = i + modPoly.getLength() - ecdata[r].length;\n                ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n            }\n        }\n        let totalCodeCount = 0;\n        for (var i = 0; i < rsBlocks.length; i++) {\n            totalCodeCount += rsBlocks[i].totalCount;\n        }\n        const data = new Array(totalCodeCount);\n        let index = 0;\n        for (var i = 0; i < maxDcCount; i++) {\n            for (var r = 0; r < rsBlocks.length; r++) {\n                if (i < dcdata[r].length) {\n                    data[index++] = dcdata[r][i];\n                }\n            }\n        }\n        for (var i = 0; i < maxEcCount; i++) {\n            for (var r = 0; r < rsBlocks.length; r++) {\n                if (i < ecdata[r].length) {\n                    data[index++] = ecdata[r][i];\n                }\n            }\n        }\n        return data;\n    }\n}\nQRCodeModel.PAD0 = 0xec;\nQRCodeModel.PAD1 = 0x11;\nexport const QRErrorCorrectLevel = { L: 1, M: 0, Q: 3, H: 2 };\nconst QRMode = { MODE_NUMBER: 1 << 0, MODE_ALPHA_NUM: 1 << 1, MODE_8BIT_BYTE: 1 << 2, MODE_KANJI: 1 << 3 };\nexport const QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7,\n};\nexport class QRUtil {\n    static getBCHTypeInfo(data) {\n        let d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15));\n        }\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\n    }\n    static getBCHTypeNumber(data) {\n        let d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18));\n        }\n        return (data << 12) | d;\n    }\n    static getBCHDigit(data) {\n        let digit = 0;\n        while (data != 0) {\n            digit++;\n            data >>>= 1;\n        }\n        return digit;\n    }\n    static getPatternPosition(typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    }\n    static getMask(maskPattern, i, j) {\n        switch (maskPattern) {\n            case QRMaskPattern.PATTERN000:\n                return (i + j) % 2 == 0;\n            case QRMaskPattern.PATTERN001:\n                return i % 2 == 0;\n            case QRMaskPattern.PATTERN010:\n                return j % 3 == 0;\n            case QRMaskPattern.PATTERN011:\n                return (i + j) % 3 == 0;\n            case QRMaskPattern.PATTERN100:\n                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n            case QRMaskPattern.PATTERN101:\n                return ((i * j) % 2) + ((i * j) % 3) == 0;\n            case QRMaskPattern.PATTERN110:\n                return (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;\n            case QRMaskPattern.PATTERN111:\n                return (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;\n            default:\n                throw new Error(`bad maskPattern:${maskPattern}`);\n        }\n    }\n    static getErrorCorrectPolynomial(errorCorrectLength) {\n        let a = new QRPolynomial([1], 0);\n        for (let i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n        }\n        return a;\n    }\n    static getLengthInBits(mode, type) {\n        if (1 <= type && type < 10) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 10;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 9;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 8;\n                case QRMode.MODE_KANJI:\n                    return 8;\n                default:\n                    throw new Error(`mode:${mode}`);\n            }\n        }\n        else if (type < 27) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 12;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 11;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 10;\n                default:\n                    throw new Error(`mode:${mode}`);\n            }\n        }\n        else if (type < 41) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 14;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 13;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 12;\n                default:\n                    throw new Error(`mode:${mode}`);\n            }\n        }\n        else {\n            throw new Error(`type:${type}`);\n        }\n    }\n    static getLostPoint(qrCode) {\n        const moduleCount = qrCode.getModuleCount();\n        let lostPoint = 0;\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount; col++) {\n                let sameCount = 0;\n                const dark = qrCode.isDark(row, col);\n                for (let r = -1; r <= 1; r++) {\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n                    for (let c = -1; c <= 1; c++) {\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n                        if (r == 0 && c == 0) {\n                            continue;\n                        }\n                        if (dark == qrCode.isDark(row + r, col + c)) {\n                            sameCount++;\n                        }\n                    }\n                }\n                if (sameCount > 5) {\n                    lostPoint += 3 + sameCount - 5;\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount - 1; row++) {\n            for (var col = 0; col < moduleCount - 1; col++) {\n                let count = 0;\n                if (qrCode.isDark(row, col))\n                    count++;\n                if (qrCode.isDark(row + 1, col))\n                    count++;\n                if (qrCode.isDark(row, col + 1))\n                    count++;\n                if (qrCode.isDark(row + 1, col + 1))\n                    count++;\n                if (count == 0 || count == 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row, col + 1) &&\n                    qrCode.isDark(row, col + 2) &&\n                    qrCode.isDark(row, col + 3) &&\n                    qrCode.isDark(row, col + 4) &&\n                    !qrCode.isDark(row, col + 5) &&\n                    qrCode.isDark(row, col + 6)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row + 1, col) &&\n                    qrCode.isDark(row + 2, col) &&\n                    qrCode.isDark(row + 3, col) &&\n                    qrCode.isDark(row + 4, col) &&\n                    !qrCode.isDark(row + 5, col) &&\n                    qrCode.isDark(row + 6, col)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        let darkCount = 0;\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col)) {\n                    darkCount++;\n                }\n            }\n        }\n        const ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n    }\n}\nQRUtil.PATTERN_POSITION_TABLE = [\n    [],\n    [6, 18],\n    [6, 22],\n    [6, 26],\n    [6, 30],\n    [6, 34],\n    [6, 22, 38],\n    [6, 24, 42],\n    [6, 26, 46],\n    [6, 28, 50],\n    [6, 30, 54],\n    [6, 32, 58],\n    [6, 34, 62],\n    [6, 26, 46, 66],\n    [6, 26, 48, 70],\n    [6, 26, 50, 74],\n    [6, 30, 54, 78],\n    [6, 30, 56, 82],\n    [6, 30, 58, 86],\n    [6, 34, 62, 90],\n    [6, 28, 50, 72, 94],\n    [6, 26, 50, 74, 98],\n    [6, 30, 54, 78, 102],\n    [6, 28, 54, 80, 106],\n    [6, 32, 58, 84, 110],\n    [6, 30, 58, 86, 114],\n    [6, 34, 62, 90, 118],\n    [6, 26, 50, 74, 98, 122],\n    [6, 30, 54, 78, 102, 126],\n    [6, 26, 52, 78, 104, 130],\n    [6, 30, 56, 82, 108, 134],\n    [6, 34, 60, 86, 112, 138],\n    [6, 30, 58, 86, 114, 142],\n    [6, 34, 62, 90, 118, 146],\n    [6, 30, 54, 78, 102, 126, 150],\n    [6, 24, 50, 76, 102, 128, 154],\n    [6, 28, 54, 80, 106, 132, 158],\n    [6, 32, 58, 84, 110, 136, 162],\n    [6, 26, 54, 82, 110, 138, 166],\n    [6, 30, 58, 86, 114, 142, 170],\n];\nQRUtil.G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nQRUtil.G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\nQRUtil.G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nexport class QRMath {\n    static glog(n) {\n        if (n < 1) {\n            throw new Error(`glog(${n})`);\n        }\n        return QRMath.LOG_TABLE[n];\n    }\n    static gexp(n) {\n        while (n < 0) {\n            n += 255;\n        }\n        while (n >= 256) {\n            n -= 255;\n        }\n        return QRMath.EXP_TABLE[n];\n    }\n}\nQRMath.EXP_TABLE = new Array(256);\nQRMath.LOG_TABLE = new Array(256);\nQRMath._constructor = (function () {\n    for (var i = 0; i < 8; i++) {\n        QRMath.EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i++) {\n        QRMath.EXP_TABLE[i] =\n            QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i++) {\n        QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n    }\n})();\nclass QRPolynomial {\n    constructor(num, shift) {\n        if (num.length == undefined) {\n            throw new Error(`${num.length}/${shift}`);\n        }\n        let offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n            offset++;\n        }\n        this.num = new Array(num.length - offset + shift);\n        for (let i = 0; i < num.length - offset; i++) {\n            this.num[i] = num[i + offset];\n        }\n    }\n    get(index) {\n        return this.num[index];\n    }\n    getLength() {\n        return this.num.length;\n    }\n    multiply(e) {\n        const num = new Array(this.getLength() + e.getLength() - 1);\n        for (let i = 0; i < this.getLength(); i++) {\n            for (let j = 0; j < e.getLength(); j++) {\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n            }\n        }\n        return new QRPolynomial(num, 0);\n    }\n    mod(e) {\n        if (this.getLength() - e.getLength() < 0) {\n            return this;\n        }\n        const ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n        const num = new Array(this.getLength());\n        for (var i = 0; i < this.getLength(); i++) {\n            num[i] = this.get(i);\n        }\n        for (var i = 0; i < e.getLength(); i++) {\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n        }\n        return new QRPolynomial(num, 0).mod(e);\n    }\n}\nclass QRRSBlock {\n    constructor(totalCount, dataCount) {\n        this.totalCount = totalCount;\n        this.dataCount = dataCount;\n    }\n    static getRSBlocks(typeNumber, errorCorrectLevel) {\n        const rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n        if (rsBlock == undefined) {\n            throw new Error(`bad rs block @ typeNumber:${typeNumber}/errorCorrectLevel:${errorCorrectLevel}`);\n        }\n        const length = rsBlock.length / 3;\n        const list = [];\n        for (let i = 0; i < length; i++) {\n            const count = rsBlock[i * 3 + 0];\n            const totalCount = rsBlock[i * 3 + 1];\n            const dataCount = rsBlock[i * 3 + 2];\n            for (let j = 0; j < count; j++) {\n                list.push(new QRRSBlock(totalCount, dataCount));\n            }\n        }\n        return list;\n    }\n    static getRsBlockTable(typeNumber, errorCorrectLevel) {\n        switch (errorCorrectLevel) {\n            case QRErrorCorrectLevel.L:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n            case QRErrorCorrectLevel.M:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n            case QRErrorCorrectLevel.Q:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n            case QRErrorCorrectLevel.H:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n            default:\n                return undefined;\n        }\n    }\n}\nQRRSBlock.RS_BLOCK_TABLE = [\n    [1, 26, 19],\n    [1, 26, 16],\n    [1, 26, 13],\n    [1, 26, 9],\n    [1, 44, 34],\n    [1, 44, 28],\n    [1, 44, 22],\n    [1, 44, 16],\n    [1, 70, 55],\n    [1, 70, 44],\n    [2, 35, 17],\n    [2, 35, 13],\n    [1, 100, 80],\n    [2, 50, 32],\n    [2, 50, 24],\n    [4, 25, 9],\n    [1, 134, 108],\n    [2, 67, 43],\n    [2, 33, 15, 2, 34, 16],\n    [2, 33, 11, 2, 34, 12],\n    [2, 86, 68],\n    [4, 43, 27],\n    [4, 43, 19],\n    [4, 43, 15],\n    [2, 98, 78],\n    [4, 49, 31],\n    [2, 32, 14, 4, 33, 15],\n    [4, 39, 13, 1, 40, 14],\n    [2, 121, 97],\n    [2, 60, 38, 2, 61, 39],\n    [4, 40, 18, 2, 41, 19],\n    [4, 40, 14, 2, 41, 15],\n    [2, 146, 116],\n    [3, 58, 36, 2, 59, 37],\n    [4, 36, 16, 4, 37, 17],\n    [4, 36, 12, 4, 37, 13],\n    [2, 86, 68, 2, 87, 69],\n    [4, 69, 43, 1, 70, 44],\n    [6, 43, 19, 2, 44, 20],\n    [6, 43, 15, 2, 44, 16],\n    [4, 101, 81],\n    [1, 80, 50, 4, 81, 51],\n    [4, 50, 22, 4, 51, 23],\n    [3, 36, 12, 8, 37, 13],\n    [2, 116, 92, 2, 117, 93],\n    [6, 58, 36, 2, 59, 37],\n    [4, 46, 20, 6, 47, 21],\n    [7, 42, 14, 4, 43, 15],\n    [4, 133, 107],\n    [8, 59, 37, 1, 60, 38],\n    [8, 44, 20, 4, 45, 21],\n    [12, 33, 11, 4, 34, 12],\n    [3, 145, 115, 1, 146, 116],\n    [4, 64, 40, 5, 65, 41],\n    [11, 36, 16, 5, 37, 17],\n    [11, 36, 12, 5, 37, 13],\n    [5, 109, 87, 1, 110, 88],\n    [5, 65, 41, 5, 66, 42],\n    [5, 54, 24, 7, 55, 25],\n    [11, 36, 12],\n    [5, 122, 98, 1, 123, 99],\n    [7, 73, 45, 3, 74, 46],\n    [15, 43, 19, 2, 44, 20],\n    [3, 45, 15, 13, 46, 16],\n    [1, 135, 107, 5, 136, 108],\n    [10, 74, 46, 1, 75, 47],\n    [1, 50, 22, 15, 51, 23],\n    [2, 42, 14, 17, 43, 15],\n    [5, 150, 120, 1, 151, 121],\n    [9, 69, 43, 4, 70, 44],\n    [17, 50, 22, 1, 51, 23],\n    [2, 42, 14, 19, 43, 15],\n    [3, 141, 113, 4, 142, 114],\n    [3, 70, 44, 11, 71, 45],\n    [17, 47, 21, 4, 48, 22],\n    [9, 39, 13, 16, 40, 14],\n    [3, 135, 107, 5, 136, 108],\n    [3, 67, 41, 13, 68, 42],\n    [15, 54, 24, 5, 55, 25],\n    [15, 43, 15, 10, 44, 16],\n    [4, 144, 116, 4, 145, 117],\n    [17, 68, 42],\n    [17, 50, 22, 6, 51, 23],\n    [19, 46, 16, 6, 47, 17],\n    [2, 139, 111, 7, 140, 112],\n    [17, 74, 46],\n    [7, 54, 24, 16, 55, 25],\n    [34, 37, 13],\n    [4, 151, 121, 5, 152, 122],\n    [4, 75, 47, 14, 76, 48],\n    [11, 54, 24, 14, 55, 25],\n    [16, 45, 15, 14, 46, 16],\n    [6, 147, 117, 4, 148, 118],\n    [6, 73, 45, 14, 74, 46],\n    [11, 54, 24, 16, 55, 25],\n    [30, 46, 16, 2, 47, 17],\n    [8, 132, 106, 4, 133, 107],\n    [8, 75, 47, 13, 76, 48],\n    [7, 54, 24, 22, 55, 25],\n    [22, 45, 15, 13, 46, 16],\n    [10, 142, 114, 2, 143, 115],\n    [19, 74, 46, 4, 75, 47],\n    [28, 50, 22, 6, 51, 23],\n    [33, 46, 16, 4, 47, 17],\n    [8, 152, 122, 4, 153, 123],\n    [22, 73, 45, 3, 74, 46],\n    [8, 53, 23, 26, 54, 24],\n    [12, 45, 15, 28, 46, 16],\n    [3, 147, 117, 10, 148, 118],\n    [3, 73, 45, 23, 74, 46],\n    [4, 54, 24, 31, 55, 25],\n    [11, 45, 15, 31, 46, 16],\n    [7, 146, 116, 7, 147, 117],\n    [21, 73, 45, 7, 74, 46],\n    [1, 53, 23, 37, 54, 24],\n    [19, 45, 15, 26, 46, 16],\n    [5, 145, 115, 10, 146, 116],\n    [19, 75, 47, 10, 76, 48],\n    [15, 54, 24, 25, 55, 25],\n    [23, 45, 15, 25, 46, 16],\n    [13, 145, 115, 3, 146, 116],\n    [2, 74, 46, 29, 75, 47],\n    [42, 54, 24, 1, 55, 25],\n    [23, 45, 15, 28, 46, 16],\n    [17, 145, 115],\n    [10, 74, 46, 23, 75, 47],\n    [10, 54, 24, 35, 55, 25],\n    [19, 45, 15, 35, 46, 16],\n    [17, 145, 115, 1, 146, 116],\n    [14, 74, 46, 21, 75, 47],\n    [29, 54, 24, 19, 55, 25],\n    [11, 45, 15, 46, 46, 16],\n    [13, 145, 115, 6, 146, 116],\n    [14, 74, 46, 23, 75, 47],\n    [44, 54, 24, 7, 55, 25],\n    [59, 46, 16, 1, 47, 17],\n    [12, 151, 121, 7, 152, 122],\n    [12, 75, 47, 26, 76, 48],\n    [39, 54, 24, 14, 55, 25],\n    [22, 45, 15, 41, 46, 16],\n    [6, 151, 121, 14, 152, 122],\n    [6, 75, 47, 34, 76, 48],\n    [46, 54, 24, 10, 55, 25],\n    [2, 45, 15, 64, 46, 16],\n    [17, 152, 122, 4, 153, 123],\n    [29, 74, 46, 14, 75, 47],\n    [49, 54, 24, 10, 55, 25],\n    [24, 45, 15, 46, 46, 16],\n    [4, 152, 122, 18, 153, 123],\n    [13, 74, 46, 32, 75, 47],\n    [48, 54, 24, 14, 55, 25],\n    [42, 45, 15, 32, 46, 16],\n    [20, 147, 117, 4, 148, 118],\n    [40, 75, 47, 7, 76, 48],\n    [43, 54, 24, 22, 55, 25],\n    [10, 45, 15, 67, 46, 16],\n    [19, 148, 118, 6, 149, 119],\n    [18, 75, 47, 31, 76, 48],\n    [34, 54, 24, 34, 55, 25],\n    [20, 45, 15, 61, 46, 16],\n];\nclass QRBitBuffer {\n    constructor() {\n        this.buffer = [];\n        this.length = 0;\n    }\n    get(index) {\n        const bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) == 1;\n    }\n    put(num, length) {\n        for (let i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n        }\n    }\n    getLengthInBits() {\n        return this.length;\n    }\n    putBit(bit) {\n        const bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n        }\n        this.length++;\n    }\n}\nconst QRCodeLimitLength = [\n    [17, 14, 11, 7],\n    [32, 26, 20, 14],\n    [53, 42, 32, 24],\n    [78, 62, 46, 34],\n    [106, 84, 60, 44],\n    [134, 106, 74, 58],\n    [154, 122, 86, 64],\n    [192, 152, 108, 84],\n    [230, 180, 130, 98],\n    [271, 213, 151, 119],\n    [321, 251, 177, 137],\n    [367, 287, 203, 155],\n    [425, 331, 241, 177],\n    [458, 362, 258, 194],\n    [520, 412, 292, 220],\n    [586, 450, 322, 250],\n    [644, 504, 364, 280],\n    [718, 560, 394, 310],\n    [792, 624, 442, 338],\n    [858, 666, 482, 382],\n    [929, 711, 509, 403],\n    [1003, 779, 565, 439],\n    [1091, 857, 611, 461],\n    [1171, 911, 661, 511],\n    [1273, 997, 715, 535],\n    [1367, 1059, 751, 593],\n    [1465, 1125, 805, 625],\n    [1528, 1190, 868, 658],\n    [1628, 1264, 908, 698],\n    [1732, 1370, 982, 742],\n    [1840, 1452, 1030, 790],\n    [1952, 1538, 1112, 842],\n    [2068, 1628, 1168, 898],\n    [2188, 1722, 1228, 958],\n    [2303, 1809, 1283, 983],\n    [2431, 1911, 1351, 1051],\n    [2563, 1989, 1423, 1093],\n    [2699, 2099, 1499, 1139],\n    [2809, 2213, 1579, 1219],\n    [2953, 2331, 1663, 1273],\n];\n","/* NeuQuant Neural-Net Quantization Algorithm\n * ------------------------------------------\n *\n * Copyright (c) 1994 Anthony Dekker\n *\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n * See \"Kohonen neural networks for optimal colour quantization\"\n * in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n * for a discussion of the algorithm.\n * See also  http://members.ozemail.com.au/~dekker/NEUQUANT.HTML\n *\n * Any party obtaining a copy of these files from the author, directly or\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal\n * in this software and documentation files (the \"Software\"), including without\n * limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons who receive\n * copies from any such party to do so, with the only requirement being\n * that this copyright notice remain intact.\n *\n * (JavaScript port 2012 by Johan Nordberg)\n */\nvar ncycles = 100; // number of learning cycles\nvar netsize = 256; // number of colors used\nvar maxnetpos = netsize - 1;\n// defs for freq and bias\nvar netbiasshift = 4; // bias for colour values\nvar intbiasshift = 16; // bias for fractions\nvar intbias = (1 << intbiasshift);\nvar gammashift = 10;\nvar gamma = (1 << gammashift);\nvar betashift = 10;\nvar beta = (intbias >> betashift); /* beta = 1/1024 */\nvar betagamma = (intbias << (gammashift - betashift));\n// defs for decreasing radius factor\nvar initrad = (netsize >> 3); // for 256 cols, radius starts\nvar radiusbiasshift = 6; // at 32.0 biased by 6 bits\nvar radiusbias = (1 << radiusbiasshift);\nvar initradius = (initrad * radiusbias); //and decreases by a\nvar radiusdec = 30; // factor of 1/30 each cycle\n// defs for decreasing alpha factor\nvar alphabiasshift = 10; // alpha starts at 1.0\nvar initalpha = (1 << alphabiasshift);\nvar alphadec; // biased by 10 bits\n/* radbias and alpharadbias used for radpower calculation */\nvar radbiasshift = 8;\nvar radbias = (1 << radbiasshift);\nvar alpharadbshift = (alphabiasshift + radbiasshift);\nvar alpharadbias = (1 << alpharadbshift);\n// four primes near 500 - assume no image has a length so large that it is\n// divisible by all four primes\nvar prime1 = 499;\nvar prime2 = 491;\nvar prime3 = 487;\nvar prime4 = 503;\nvar minpicturebytes = (3 * prime4);\n/*\n  Constructor: NeuQuant\n\n  Arguments:\n\n  pixels - array of pixels in RGB format\n  samplefac - sampling factor 1 to 30 where lower is better quality\n\n  >\n  > pixels = [r, g, b, r, g, b, r, g, b, ..]\n  >\n*/\nfunction NeuQuant(pixels, samplefac) {\n    var network; // int[netsize][4]\n    var netindex; // for network lookup - really 256\n    // bias and freq arrays for learning\n    var bias;\n    var freq;\n    var radpower;\n    /*\n      Private Method: init\n  \n      sets up arrays\n    */\n    function init() {\n        network = [];\n        netindex = new Int32Array(256);\n        bias = new Int32Array(netsize);\n        freq = new Int32Array(netsize);\n        radpower = new Int32Array(netsize >> 3);\n        var i, v;\n        for (i = 0; i < netsize; i++) {\n            v = (i << (netbiasshift + 8)) / netsize;\n            network[i] = new Float64Array([v, v, v, 0]);\n            //network[i] = [v, v, v, 0]\n            freq[i] = intbias / netsize;\n            bias[i] = 0;\n        }\n    }\n    /*\n      Private Method: unbiasnet\n  \n      unbiases network to give byte values 0..255 and record position i to prepare for sort\n    */\n    function unbiasnet() {\n        for (var i = 0; i < netsize; i++) {\n            network[i][0] >>= netbiasshift;\n            network[i][1] >>= netbiasshift;\n            network[i][2] >>= netbiasshift;\n            network[i][3] = i; // record color number\n        }\n    }\n    /*\n      Private Method: altersingle\n  \n      moves neuron *i* towards biased (b,g,r) by factor *alpha*\n    */\n    function altersingle(alpha, i, b, g, r) {\n        network[i][0] -= (alpha * (network[i][0] - b)) / initalpha;\n        network[i][1] -= (alpha * (network[i][1] - g)) / initalpha;\n        network[i][2] -= (alpha * (network[i][2] - r)) / initalpha;\n    }\n    /*\n      Private Method: alterneigh\n  \n      moves neurons in *radius* around index *i* towards biased (b,g,r) by factor *alpha*\n    */\n    function alterneigh(radius, i, b, g, r) {\n        var lo = Math.abs(i - radius);\n        var hi = Math.min(i + radius, netsize);\n        var j = i + 1;\n        var k = i - 1;\n        var m = 1;\n        var p, a;\n        while ((j < hi) || (k > lo)) {\n            a = radpower[m++];\n            if (j < hi) {\n                p = network[j++];\n                p[0] -= (a * (p[0] - b)) / alpharadbias;\n                p[1] -= (a * (p[1] - g)) / alpharadbias;\n                p[2] -= (a * (p[2] - r)) / alpharadbias;\n            }\n            if (k > lo) {\n                p = network[k--];\n                p[0] -= (a * (p[0] - b)) / alpharadbias;\n                p[1] -= (a * (p[1] - g)) / alpharadbias;\n                p[2] -= (a * (p[2] - r)) / alpharadbias;\n            }\n        }\n    }\n    /*\n      Private Method: contest\n  \n      searches for biased BGR values\n    */\n    function contest(b, g, r) {\n        /*\n          finds closest neuron (min dist) and updates freq\n          finds best neuron (min dist-bias) and returns position\n          for frequently chosen neurons, freq[i] is high and bias[i] is negative\n          bias[i] = gamma * ((1 / netsize) - freq[i])\n        */\n        var bestd = ~(1 << 31);\n        var bestbiasd = bestd;\n        var bestpos = -1;\n        var bestbiaspos = bestpos;\n        var i, n, dist, biasdist, betafreq;\n        for (i = 0; i < netsize; i++) {\n            n = network[i];\n            dist = Math.abs(n[0] - b) + Math.abs(n[1] - g) + Math.abs(n[2] - r);\n            if (dist < bestd) {\n                bestd = dist;\n                bestpos = i;\n            }\n            biasdist = dist - ((bias[i]) >> (intbiasshift - netbiasshift));\n            if (biasdist < bestbiasd) {\n                bestbiasd = biasdist;\n                bestbiaspos = i;\n            }\n            betafreq = (freq[i] >> betashift);\n            freq[i] -= betafreq;\n            bias[i] += (betafreq << gammashift);\n        }\n        freq[bestpos] += beta;\n        bias[bestpos] -= betagamma;\n        return bestbiaspos;\n    }\n    /*\n      Private Method: inxbuild\n  \n      sorts network and builds netindex[0..255]\n    */\n    function inxbuild() {\n        var i, j, p, q, smallpos, smallval, previouscol = 0, startpos = 0;\n        for (i = 0; i < netsize; i++) {\n            p = network[i];\n            smallpos = i;\n            smallval = p[1]; // index on g\n            // find smallest in i..netsize-1\n            for (j = i + 1; j < netsize; j++) {\n                q = network[j];\n                if (q[1] < smallval) { // index on g\n                    smallpos = j;\n                    smallval = q[1]; // index on g\n                }\n            }\n            q = network[smallpos];\n            // swap p (i) and q (smallpos) entries\n            if (i != smallpos) {\n                j = q[0];\n                q[0] = p[0];\n                p[0] = j;\n                j = q[1];\n                q[1] = p[1];\n                p[1] = j;\n                j = q[2];\n                q[2] = p[2];\n                p[2] = j;\n                j = q[3];\n                q[3] = p[3];\n                p[3] = j;\n            }\n            // smallval entry is now in position i\n            if (smallval != previouscol) {\n                netindex[previouscol] = (startpos + i) >> 1;\n                for (j = previouscol + 1; j < smallval; j++)\n                    netindex[j] = i;\n                previouscol = smallval;\n                startpos = i;\n            }\n        }\n        netindex[previouscol] = (startpos + maxnetpos) >> 1;\n        for (j = previouscol + 1; j < 256; j++)\n            netindex[j] = maxnetpos; // really 256\n    }\n    /*\n      Private Method: inxsearch\n  \n      searches for BGR values 0..255 and returns a color index\n    */\n    function inxsearch(b, g, r) {\n        var a, p, dist;\n        var bestd = 1000; // biggest possible dist is 256*3\n        var best = -1;\n        var i = netindex[g]; // index on g\n        var j = i - 1; // start at netindex[g] and work outwards\n        while ((i < netsize) || (j >= 0)) {\n            if (i < netsize) {\n                p = network[i];\n                dist = p[1] - g; // inx key\n                if (dist >= bestd)\n                    i = netsize; // stop iter\n                else {\n                    i++;\n                    if (dist < 0)\n                        dist = -dist;\n                    a = p[0] - b;\n                    if (a < 0)\n                        a = -a;\n                    dist += a;\n                    if (dist < bestd) {\n                        a = p[2] - r;\n                        if (a < 0)\n                            a = -a;\n                        dist += a;\n                        if (dist < bestd) {\n                            bestd = dist;\n                            best = p[3];\n                        }\n                    }\n                }\n            }\n            if (j >= 0) {\n                p = network[j];\n                dist = g - p[1]; // inx key - reverse dif\n                if (dist >= bestd)\n                    j = -1; // stop iter\n                else {\n                    j--;\n                    if (dist < 0)\n                        dist = -dist;\n                    a = p[0] - b;\n                    if (a < 0)\n                        a = -a;\n                    dist += a;\n                    if (dist < bestd) {\n                        a = p[2] - r;\n                        if (a < 0)\n                            a = -a;\n                        dist += a;\n                        if (dist < bestd) {\n                            bestd = dist;\n                            best = p[3];\n                        }\n                    }\n                }\n            }\n        }\n        return best;\n    }\n    /*\n      Private Method: learn\n  \n      \"Main Learning Loop\"\n    */\n    function learn() {\n        var i;\n        var lengthcount = pixels.length;\n        var alphadec = 30 + ((samplefac - 1) / 3);\n        var samplepixels = lengthcount / (3 * samplefac);\n        var delta = ~~(samplepixels / ncycles);\n        var alpha = initalpha;\n        var radius = initradius;\n        var rad = radius >> radiusbiasshift;\n        if (rad <= 1)\n            rad = 0;\n        for (i = 0; i < rad; i++)\n            radpower[i] = alpha * (((rad * rad - i * i) * radbias) / (rad * rad));\n        var step;\n        if (lengthcount < minpicturebytes) {\n            samplefac = 1;\n            step = 3;\n        }\n        else if ((lengthcount % prime1) !== 0) {\n            step = 3 * prime1;\n        }\n        else if ((lengthcount % prime2) !== 0) {\n            step = 3 * prime2;\n        }\n        else if ((lengthcount % prime3) !== 0) {\n            step = 3 * prime3;\n        }\n        else {\n            step = 3 * prime4;\n        }\n        var b, g, r, j;\n        var pix = 0; // current pixel\n        i = 0;\n        while (i < samplepixels) {\n            b = (pixels[pix] & 0xff) << netbiasshift;\n            g = (pixels[pix + 1] & 0xff) << netbiasshift;\n            r = (pixels[pix + 2] & 0xff) << netbiasshift;\n            j = contest(b, g, r);\n            altersingle(alpha, j, b, g, r);\n            if (rad !== 0)\n                alterneigh(rad, j, b, g, r); // alter neighbours\n            pix += step;\n            if (pix >= lengthcount)\n                pix -= lengthcount;\n            i++;\n            if (delta === 0)\n                delta = 1;\n            if (i % delta === 0) {\n                alpha -= alpha / alphadec;\n                radius -= radius / radiusdec;\n                rad = radius >> radiusbiasshift;\n                if (rad <= 1)\n                    rad = 0;\n                for (j = 0; j < rad; j++)\n                    radpower[j] = alpha * (((rad * rad - j * j) * radbias) / (rad * rad));\n            }\n        }\n    }\n    /*\n      Method: buildColormap\n  \n      1. initializes network\n      2. trains it\n      3. removes misconceptions\n      4. builds colorindex\n    */\n    function buildColormap() {\n        init();\n        learn();\n        unbiasnet();\n        inxbuild();\n    }\n    this.buildColormap = buildColormap;\n    /*\n      Method: getColormap\n  \n      builds colormap from the index\n  \n      returns array in the format:\n  \n      >\n      > [r, g, b, r, g, b, r, g, b, ..]\n      >\n    */\n    function getColormap() {\n        var map = [];\n        var index = [];\n        for (var i = 0; i < netsize; i++)\n            index[network[i][3]] = i;\n        var k = 0;\n        for (var l = 0; l < netsize; l++) {\n            var j = index[l];\n            map[k++] = (network[j][0]);\n            map[k++] = (network[j][1]);\n            map[k++] = (network[j][2]);\n        }\n        return map;\n    }\n    this.getColormap = getColormap;\n    /*\n      Method: lookupRGB\n  \n      looks for the closest *r*, *g*, *b* color in the map and\n      returns its index\n    */\n    this.lookupRGB = inxsearch;\n}\n// module.exports = NeuQuant;\nexport default NeuQuant;\n","/*\n  LZWEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n\n  Acknowledgements\n  GIFCOMPR.C - GIF Image compression routines\n  Lempel-Ziv compression based on 'compress'. GIF modifications by\n  David Rowley (mgardi@watdcsu.waterloo.edu)\n  GIF Image compression - modified 'compress'\n  Based on: compress.c - File compression ala IEEE Computer, June 1984.\n  By Authors: Spencer W. Thomas (decvax!harpo!utah-cs!utah-gr!thomas)\n  Jim McKie (decvax!mcvax!jim)\n  Steve Davies (decvax!vax135!petsd!peora!srd)\n  Ken Turkowski (decvax!decwrl!turtlevax!ken)\n  James A. Woods (decvax!ihnp4!ames!jaw)\n  Joe Orost (decvax!vax135!petsd!joe)\n*/\nvar EOF = -1;\nvar BITS = 12;\nvar HSIZE = 5003; // 80% occupancy\nvar masks = [0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,\n    0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,\n    0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF];\nfunction LZWEncoder(width, height, pixels, colorDepth) {\n    var initCodeSize = Math.max(2, colorDepth);\n    var accum = new Uint8Array(256);\n    var htab = new Int32Array(HSIZE);\n    var codetab = new Int32Array(HSIZE);\n    var cur_accum, cur_bits = 0;\n    var a_count;\n    var free_ent = 0; // first unused entry\n    var maxcode;\n    // block compression parameters -- after all codes are used up,\n    // and compression rate changes, start over.\n    var clear_flg = false;\n    // Algorithm: use open addressing double hashing (no chaining) on the\n    // prefix code / next character combination. We do a variant of Knuth's\n    // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n    // secondary probe. Here, the modular division first probe is gives way\n    // to a faster exclusive-or manipulation. Also do block compression with\n    // an adaptive reset, whereby the code table is cleared when the compression\n    // ratio decreases, but after the table fills. The variable-length output\n    // codes are re-sized at this point, and a special CLEAR code is generated\n    // for the decompressor. Late addition: construct the table according to\n    // file size for noticeable speed improvement on small files. Please direct\n    // questions about this implementation to ames!jaw.\n    var g_init_bits, ClearCode, EOFCode;\n    var remaining, curPixel, n_bits;\n    // Add a character to the end of the current packet, and if it is 254\n    // characters, flush the packet to disk.\n    function char_out(c, outs) {\n        accum[a_count++] = c;\n        if (a_count >= 254)\n            flush_char(outs);\n    }\n    // Clear out the hash table\n    // table clear for block compress\n    function cl_block(outs) {\n        cl_hash(HSIZE);\n        free_ent = ClearCode + 2;\n        clear_flg = true;\n        output(ClearCode, outs);\n    }\n    // Reset code table\n    function cl_hash(hsize) {\n        for (var i = 0; i < hsize; ++i)\n            htab[i] = -1;\n    }\n    function compress(init_bits, outs) {\n        var fcode, c, i, ent, disp, hsize_reg, hshift;\n        // Set up the globals: g_init_bits - initial number of bits\n        g_init_bits = init_bits;\n        // Set up the necessary values\n        clear_flg = false;\n        n_bits = g_init_bits;\n        maxcode = MAXCODE(n_bits);\n        ClearCode = 1 << (init_bits - 1);\n        EOFCode = ClearCode + 1;\n        free_ent = ClearCode + 2;\n        a_count = 0; // clear packet\n        ent = nextPixel();\n        hshift = 0;\n        for (fcode = HSIZE; fcode < 65536; fcode *= 2)\n            ++hshift;\n        hshift = 8 - hshift; // set hash code range bound\n        hsize_reg = HSIZE;\n        cl_hash(hsize_reg); // clear hash table\n        output(ClearCode, outs);\n        outer_loop: while ((c = nextPixel()) != EOF) {\n            fcode = (c << BITS) + ent;\n            i = (c << hshift) ^ ent; // xor hashing\n            if (htab[i] === fcode) {\n                ent = codetab[i];\n                continue;\n            }\n            else if (htab[i] >= 0) { // non-empty slot\n                disp = hsize_reg - i; // secondary hash (after G. Knott)\n                if (i === 0)\n                    disp = 1;\n                do {\n                    if ((i -= disp) < 0)\n                        i += hsize_reg;\n                    if (htab[i] === fcode) {\n                        ent = codetab[i];\n                        continue outer_loop;\n                    }\n                } while (htab[i] >= 0);\n            }\n            output(ent, outs);\n            ent = c;\n            if (free_ent < 1 << BITS) {\n                codetab[i] = free_ent++; // code -> hashtable\n                htab[i] = fcode;\n            }\n            else {\n                cl_block(outs);\n            }\n        }\n        // Put out the final code.\n        output(ent, outs);\n        output(EOFCode, outs);\n    }\n    function encode(outs) {\n        outs.writeByte(initCodeSize); // write \"initial code size\" byte\n        remaining = width * height; // reset navigation variables\n        curPixel = 0;\n        compress(initCodeSize + 1, outs); // compress and write the pixel data\n        outs.writeByte(0); // write block terminator\n    }\n    // Flush the packet to disk, and reset the accumulator\n    function flush_char(outs) {\n        if (a_count > 0) {\n            outs.writeByte(a_count);\n            outs.writeBytes(accum, 0, a_count);\n            a_count = 0;\n        }\n    }\n    function MAXCODE(n_bits) {\n        return (1 << n_bits) - 1;\n    }\n    // Return the next pixel from the image\n    function nextPixel() {\n        if (remaining === 0)\n            return EOF;\n        --remaining;\n        var pix = pixels[curPixel++];\n        return pix & 0xff;\n    }\n    function output(code, outs) {\n        cur_accum &= masks[cur_bits];\n        if (cur_bits > 0)\n            cur_accum |= (code << cur_bits);\n        else\n            cur_accum = code;\n        cur_bits += n_bits;\n        while (cur_bits >= 8) {\n            char_out((cur_accum & 0xff), outs);\n            cur_accum >>= 8;\n            cur_bits -= 8;\n        }\n        // If the next entry is going to be too big for the code size,\n        // then increase it, if possible.\n        if (free_ent > maxcode || clear_flg) {\n            if (clear_flg) {\n                maxcode = MAXCODE(n_bits = g_init_bits);\n                clear_flg = false;\n            }\n            else {\n                ++n_bits;\n                if (n_bits == BITS)\n                    maxcode = 1 << BITS;\n                else\n                    maxcode = MAXCODE(n_bits);\n            }\n        }\n        if (code == EOFCode) {\n            // At EOF, write the rest of the buffer.\n            while (cur_bits > 0) {\n                char_out((cur_accum & 0xff), outs);\n                cur_accum >>= 8;\n                cur_bits -= 8;\n            }\n            flush_char(outs);\n        }\n    }\n    this.encode = encode;\n}\n// module.exports = LZWEncoder;\nexport default LZWEncoder;\n","/*\n  GIFEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n  Makito (Optimized for AwesomeQR - sumimakito@hotmail,com)\n*/\n// var NeuQuant = require(\"./TypedNeuQuant.js\");\nimport NeuQuant from \"./TypedNeuQuant.js\";\n// var LZWEncoder = require(\"./LZWEncoder.js\");\nimport LZWEncoder from \"./LZWEncoder.js\";\nfunction ByteArray() {\n    this.page = -1;\n    this.pages = [];\n    this.newPage();\n}\nByteArray.pageSize = 4096;\nByteArray.charMap = {};\nfor (var i = 0; i < 256; i++)\n    ByteArray.charMap[i] = String.fromCharCode(i);\nByteArray.prototype.newPage = function () {\n    this.pages[++this.page] = new Uint8Array(ByteArray.pageSize);\n    this.cursor = 0;\n};\nByteArray.prototype.getData = function () {\n    var rv = \"\";\n    for (var p = 0; p < this.pages.length; p++) {\n        for (var i = 0; i < ByteArray.pageSize; i++) {\n            rv += ByteArray.charMap[this.pages[p][i]];\n        }\n    }\n    return rv;\n};\nByteArray.prototype.toFlattenUint8Array = function () {\n    const chunks = [];\n    for (var p = 0; p < this.pages.length; p++) {\n        if (p === this.pages.length - 1) {\n            const chunk = Uint8Array.from(this.pages[p].slice(0, this.cursor));\n            chunks.push(chunk);\n        }\n        else {\n            chunks.push(this.pages[p]);\n        }\n    }\n    const flatten = new Uint8Array(chunks.reduce((acc, chunk) => acc + chunk.length, 0));\n    chunks.reduce((lastLength, chunk) => {\n        flatten.set(chunk, lastLength);\n        return lastLength + chunk.length;\n    }, 0);\n    return flatten;\n};\nByteArray.prototype.writeByte = function (val) {\n    if (this.cursor >= ByteArray.pageSize)\n        this.newPage();\n    this.pages[this.page][this.cursor++] = val;\n};\nByteArray.prototype.writeUTFBytes = function (string) {\n    for (var l = string.length, i = 0; i < l; i++)\n        this.writeByte(string.charCodeAt(i));\n};\nByteArray.prototype.writeBytes = function (array, offset, length) {\n    for (var l = length || array.length, i = offset || 0; i < l; i++)\n        this.writeByte(array[i]);\n};\nfunction GIFEncoder(width, height) {\n    // image size\n    this.width = ~~width;\n    this.height = ~~height;\n    // transparent color if given\n    this.transparent = null;\n    // transparent index in color table\n    this.transIndex = 0;\n    // -1 = no repeat, 0 = forever. anything else is repeat count\n    this.repeat = -1;\n    // frame delay (hundredths)\n    this.delay = 0;\n    this.image = null; // current frame\n    this.pixels = null; // BGR byte array from frame\n    this.indexedPixels = null; // converted frame indexed to palette\n    this.colorDepth = null; // number of bit planes\n    this.colorTab = null; // RGB palette\n    this.neuQuant = null; // NeuQuant instance that was used to generate this.colorTab.\n    this.usedEntry = new Array(); // active palette entries\n    this.palSize = 7; // color table size (bits-1)\n    this.dispose = -1; // disposal code (-1 = use default)\n    this.firstFrame = true;\n    this.sample = 10; // default sample interval for quantizer\n    this.dither = false; // default dithering\n    this.globalPalette = false;\n    this.out = new ByteArray();\n}\n/*\n  Sets the delay time between each frame, or changes it for subsequent frames\n  (applies to last frame added)\n*/\nGIFEncoder.prototype.setDelay = function (milliseconds) {\n    this.delay = Math.round(milliseconds / 10);\n};\n/*\n  Sets frame rate in frames per second.\n*/\nGIFEncoder.prototype.setFrameRate = function (fps) {\n    this.delay = Math.round(100 / fps);\n};\n/*\n  Sets the GIF frame disposal code for the last added frame and any\n  subsequent frames.\n\n  Default is 0 if no transparent color has been set, otherwise 2.\n*/\nGIFEncoder.prototype.setDispose = function (disposalCode) {\n    if (disposalCode >= 0)\n        this.dispose = disposalCode;\n};\n/*\n  Sets the number of times the set of GIF frames should be played.\n\n  -1 = play once\n  0 = repeat indefinitely\n\n  Default is -1\n\n  Must be invoked before the first image is added\n*/\nGIFEncoder.prototype.setRepeat = function (repeat) {\n    this.repeat = repeat;\n};\n/*\n  Sets the transparent color for the last added frame and any subsequent\n  frames. Since all colors are subject to modification in the quantization\n  process, the color in the final palette for each frame closest to the given\n  color becomes the transparent color for that frame. May be set to null to\n  indicate no transparent color.\n*/\nGIFEncoder.prototype.setTransparent = function (color) {\n    this.transparent = color;\n};\n/*\n  Adds next GIF frame. The frame is not written immediately, but is\n  actually deferred until the next frame is received so that timing\n  data can be inserted.  Invoking finish() flushes all frames.\n*/\nGIFEncoder.prototype.addFrame = function (imageData) {\n    this.image = imageData;\n    this.colorTab = this.globalPalette && this.globalPalette.slice ? this.globalPalette : null;\n    this.getImagePixels(); // convert to correct format if necessary\n    this.analyzePixels(); // build color table & map pixels\n    if (this.globalPalette === true)\n        this.globalPalette = this.colorTab;\n    if (this.firstFrame) {\n        this.writeHeader();\n        this.writeLSD(); // logical screen descriptior\n        this.writePalette(); // global color table\n        if (this.repeat >= 0) {\n            // use NS app extension to indicate reps\n            this.writeNetscapeExt();\n        }\n    }\n    this.writeGraphicCtrlExt(); // write graphic control extension\n    this.writeImageDesc(); // image descriptor\n    if (!this.firstFrame && !this.globalPalette)\n        this.writePalette(); // local color table\n    this.writePixels(); // encode and write pixel data\n    this.firstFrame = false;\n};\n/*\n  Adds final trailer to the GIF stream, if you don't call the finish method\n  the GIF stream will not be valid.\n*/\nGIFEncoder.prototype.finish = function () {\n    this.out.writeByte(0x3b); // gif trailer\n};\n/*\n  Sets quality of color quantization (conversion of images to the maximum 256\n  colors allowed by the GIF specification). Lower values (minimum = 1)\n  produce better colors, but slow processing significantly. 10 is the\n  default, and produces good color mapping at reasonable speeds. Values\n  greater than 20 do not yield significant improvements in speed.\n*/\nGIFEncoder.prototype.setQuality = function (quality) {\n    if (quality < 1)\n        quality = 1;\n    this.sample = quality;\n};\n/*\n  Sets dithering method. Available are:\n  - FALSE no dithering\n  - TRUE or FloydSteinberg\n  - FalseFloydSteinberg\n  - Stucki\n  - Atkinson\n  You can add '-serpentine' to use serpentine scanning\n*/\nGIFEncoder.prototype.setDither = function (dither) {\n    if (dither === true)\n        dither = \"FloydSteinberg\";\n    this.dither = dither;\n};\n/*\n  Sets global palette for all frames.\n  You can provide TRUE to create global palette from first picture.\n  Or an array of r,g,b,r,g,b,...\n*/\nGIFEncoder.prototype.setGlobalPalette = function (palette) {\n    this.globalPalette = palette;\n};\n/*\n  Returns global palette used for all frames.\n  If setGlobalPalette(true) was used, then this function will return\n  calculated palette after the first frame is added.\n*/\nGIFEncoder.prototype.getGlobalPalette = function () {\n    return (this.globalPalette && this.globalPalette.slice && this.globalPalette.slice(0)) || this.globalPalette;\n};\n/*\n  Writes GIF file header\n*/\nGIFEncoder.prototype.writeHeader = function () {\n    this.out.writeUTFBytes(\"GIF89a\");\n};\n/*\n  Analyzes current frame colors and creates color map.\n*/\nGIFEncoder.prototype.analyzePixels = function () {\n    if (!this.colorTab) {\n        this.neuQuant = new NeuQuant(this.pixels, this.sample);\n        this.neuQuant.buildColormap(); // create reduced palette\n        this.colorTab = this.neuQuant.getColormap();\n    }\n    // map image pixels to new palette\n    if (this.dither) {\n        this.ditherPixels(this.dither.replace(\"-serpentine\", \"\"), this.dither.match(/-serpentine/) !== null);\n    }\n    else {\n        this.indexPixels();\n    }\n    this.pixels = null;\n    this.colorDepth = 8;\n    this.palSize = 7;\n    // get closest match to transparent color if specified\n    if (this.transparent !== null) {\n        this.transIndex = this.findClosest(this.transparent, true);\n    }\n};\n/*\n  Index pixels, without dithering\n*/\nGIFEncoder.prototype.indexPixels = function (imgq) {\n    var nPix = this.pixels.length / 3;\n    this.indexedPixels = new Uint8Array(nPix);\n    var k = 0;\n    for (var j = 0; j < nPix; j++) {\n        var index = this.findClosestRGB(this.pixels[k++] & 0xff, this.pixels[k++] & 0xff, this.pixels[k++] & 0xff);\n        this.usedEntry[index] = true;\n        this.indexedPixels[j] = index;\n    }\n};\n/*\n  Taken from http://jsbin.com/iXofIji/2/edit by PAEz\n*/\nGIFEncoder.prototype.ditherPixels = function (kernel, serpentine) {\n    var kernels = {\n        FalseFloydSteinberg: [\n            [3 / 8, 1, 0],\n            [3 / 8, 0, 1],\n            [2 / 8, 1, 1],\n        ],\n        FloydSteinberg: [\n            [7 / 16, 1, 0],\n            [3 / 16, -1, 1],\n            [5 / 16, 0, 1],\n            [1 / 16, 1, 1],\n        ],\n        Stucki: [\n            [8 / 42, 1, 0],\n            [4 / 42, 2, 0],\n            [2 / 42, -2, 1],\n            [4 / 42, -1, 1],\n            [8 / 42, 0, 1],\n            [4 / 42, 1, 1],\n            [2 / 42, 2, 1],\n            [1 / 42, -2, 2],\n            [2 / 42, -1, 2],\n            [4 / 42, 0, 2],\n            [2 / 42, 1, 2],\n            [1 / 42, 2, 2],\n        ],\n        Atkinson: [\n            [1 / 8, 1, 0],\n            [1 / 8, 2, 0],\n            [1 / 8, -1, 1],\n            [1 / 8, 0, 1],\n            [1 / 8, 1, 1],\n            [1 / 8, 0, 2],\n        ],\n    };\n    if (!kernel || !kernels[kernel]) {\n        throw \"Unknown dithering kernel: \" + kernel;\n    }\n    var ds = kernels[kernel];\n    var index = 0, height = this.height, width = this.width, data = this.pixels;\n    var direction = serpentine ? -1 : 1;\n    this.indexedPixels = new Uint8Array(this.pixels.length / 3);\n    for (var y = 0; y < height; y++) {\n        if (serpentine)\n            direction = direction * -1;\n        for (var x = direction == 1 ? 0 : width - 1, xend = direction == 1 ? width : 0; x !== xend; x += direction) {\n            index = y * width + x;\n            // Get original colour\n            var idx = index * 3;\n            var r1 = data[idx];\n            var g1 = data[idx + 1];\n            var b1 = data[idx + 2];\n            // Get converted colour\n            idx = this.findClosestRGB(r1, g1, b1);\n            this.usedEntry[idx] = true;\n            this.indexedPixels[index] = idx;\n            idx *= 3;\n            var r2 = this.colorTab[idx];\n            var g2 = this.colorTab[idx + 1];\n            var b2 = this.colorTab[idx + 2];\n            var er = r1 - r2;\n            var eg = g1 - g2;\n            var eb = b1 - b2;\n            for (var i = direction == 1 ? 0 : ds.length - 1, end = direction == 1 ? ds.length : 0; i !== end; i += direction) {\n                var x1 = ds[i][1]; // *direction;  //  Should this by timesd by direction?..to make the kernel go in the opposite direction....got no idea....\n                var y1 = ds[i][2];\n                if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {\n                    var d = ds[i][0];\n                    idx = index + x1 + y1 * width;\n                    idx *= 3;\n                    data[idx] = Math.max(0, Math.min(255, data[idx] + er * d));\n                    data[idx + 1] = Math.max(0, Math.min(255, data[idx + 1] + eg * d));\n                    data[idx + 2] = Math.max(0, Math.min(255, data[idx + 2] + eb * d));\n                }\n            }\n        }\n    }\n};\n/*\n  Returns index of palette color closest to c\n*/\nGIFEncoder.prototype.findClosest = function (c, used) {\n    return this.findClosestRGB((c & 0xff0000) >> 16, (c & 0x00ff00) >> 8, c & 0x0000ff, used);\n};\nGIFEncoder.prototype.findClosestRGB = function (r, g, b, used) {\n    if (this.colorTab === null)\n        return -1;\n    if (this.neuQuant && !used) {\n        return this.neuQuant.lookupRGB(r, g, b);\n    }\n    var c = b | (g << 8) | (r << 16);\n    var minpos = 0;\n    var dmin = 256 * 256 * 256;\n    var len = this.colorTab.length;\n    for (var i = 0, index = 0; i < len; index++) {\n        var dr = r - (this.colorTab[i++] & 0xff);\n        var dg = g - (this.colorTab[i++] & 0xff);\n        var db = b - (this.colorTab[i++] & 0xff);\n        var d = dr * dr + dg * dg + db * db;\n        if ((!used || this.usedEntry[index]) && d < dmin) {\n            dmin = d;\n            minpos = index;\n        }\n    }\n    return minpos;\n};\n/*\n  Extracts image pixels into byte array pixels\n  (removes alphachannel from canvas imagedata)\n*/\nGIFEncoder.prototype.getImagePixels = function () {\n    var w = this.width;\n    var h = this.height;\n    this.pixels = new Uint8Array(w * h * 3);\n    var data = this.image;\n    var srcPos = 0;\n    var count = 0;\n    for (var i = 0; i < h; i++) {\n        for (var j = 0; j < w; j++) {\n            this.pixels[count++] = data[srcPos++];\n            this.pixels[count++] = data[srcPos++];\n            this.pixels[count++] = data[srcPos++];\n            srcPos++;\n        }\n    }\n};\n/*\n  Writes Graphic Control Extension\n*/\nGIFEncoder.prototype.writeGraphicCtrlExt = function () {\n    this.out.writeByte(0x21); // extension introducer\n    this.out.writeByte(0xf9); // GCE label\n    this.out.writeByte(4); // data block size\n    var transp, disp;\n    if (this.transparent === null) {\n        transp = 0;\n        disp = 0; // dispose = no action\n    }\n    else {\n        transp = 1;\n        disp = 2; // force clear if using transparent color\n    }\n    if (this.dispose >= 0) {\n        disp = this.dispose & 7; // user override\n    }\n    disp <<= 2;\n    // packed fields\n    this.out.writeByte(0 | // 1:3 reserved\n        disp | // 4:6 disposal\n        0 | // 7 user input - 0 = none\n        transp // 8 transparency flag\n    );\n    this.writeShort(this.delay); // delay x 1/100 sec\n    this.out.writeByte(this.transIndex); // transparent color index\n    this.out.writeByte(0); // block terminator\n};\n/*\n  Writes Image Descriptor\n*/\nGIFEncoder.prototype.writeImageDesc = function () {\n    this.out.writeByte(0x2c); // image separator\n    this.writeShort(0); // image position x,y = 0,0\n    this.writeShort(0);\n    this.writeShort(this.width); // image size\n    this.writeShort(this.height);\n    // packed fields\n    if (this.firstFrame || this.globalPalette) {\n        // no LCT - GCT is used for first (or only) frame\n        this.out.writeByte(0);\n    }\n    else {\n        // specify normal LCT\n        this.out.writeByte(0x80 | // 1 local color table 1=yes\n            0 | // 2 interlace - 0=no\n            0 | // 3 sorted - 0=no\n            0 | // 4-5 reserved\n            this.palSize // 6-8 size of color table\n        );\n    }\n};\n/*\n  Writes Logical Screen Descriptor\n*/\nGIFEncoder.prototype.writeLSD = function () {\n    // logical screen size\n    this.writeShort(this.width);\n    this.writeShort(this.height);\n    // packed fields\n    this.out.writeByte(0x80 | // 1 : global color table flag = 1 (gct used)\n        0x70 | // 2-4 : color resolution = 7\n        0x00 | // 5 : gct sort flag = 0\n        this.palSize // 6-8 : gct size\n    );\n    this.out.writeByte(0); // background color index\n    this.out.writeByte(0); // pixel aspect ratio - assume 1:1\n};\n/*\n  Writes Netscape application extension to define repeat count.\n*/\nGIFEncoder.prototype.writeNetscapeExt = function () {\n    this.out.writeByte(0x21); // extension introducer\n    this.out.writeByte(0xff); // app extension label\n    this.out.writeByte(11); // block size\n    this.out.writeUTFBytes(\"NETSCAPE2.0\"); // app id + auth code\n    this.out.writeByte(3); // sub-block size\n    this.out.writeByte(1); // loop sub-block id\n    this.writeShort(this.repeat); // loop count (extra iterations, 0=repeat forever)\n    this.out.writeByte(0); // block terminator\n};\n/*\n  Writes color table\n*/\nGIFEncoder.prototype.writePalette = function () {\n    this.out.writeBytes(this.colorTab);\n    var n = 3 * 256 - this.colorTab.length;\n    for (var i = 0; i < n; i++)\n        this.out.writeByte(0);\n};\nGIFEncoder.prototype.writeShort = function (pValue) {\n    this.out.writeByte(pValue & 0xff);\n    this.out.writeByte((pValue >> 8) & 0xff);\n};\n/*\n  Encodes and writes pixel data\n*/\nGIFEncoder.prototype.writePixels = function () {\n    var enc = new LZWEncoder(this.width, this.height, this.indexedPixels, this.colorDepth);\n    enc.encode(this.out);\n};\n/*\n  Retrieves the GIF stream\n*/\nGIFEncoder.prototype.stream = function () {\n    return this.out;\n};\n// module.exports = GIFEncoder;\nexport default GIFEncoder;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCanvas } from \"canvas\";\nimport { decompressFrames, parseGIF } from \"./gifuct-js/index\";\nimport { QRCodeModel, QRErrorCorrectLevel, QRUtil } from \"./qrcode\";\nimport GIFEncoder from \"./gif.js/GIFEncoder\";\nconst defaultScale = 0.4;\nfunction loadImage(url) {\n    if (!url) {\n        return undefined;\n    }\n    function cleanup(img) {\n        img.onload = null;\n        img.onerror = null;\n    }\n    return new Promise(function (resolve, reject) {\n        if (url.slice(0, 4) == 'data') {\n            let img = new Image();\n            img.onload = function () {\n                resolve(img);\n                cleanup(img);\n            };\n            img.onerror = function () {\n                reject('Image load error');\n                cleanup(img);\n            };\n            img.src = url;\n            return;\n        }\n        let img = new Image();\n        img.setAttribute(\"crossOrigin\", 'Anonymous');\n        img.onload = function () {\n            resolve(img);\n        };\n        img.onerror = function () {\n            reject('Image load error');\n        };\n        img.src = url;\n    });\n}\nexport class AwesomeQR {\n    constructor(options) {\n        const _options = Object.assign({}, options);\n        Object.keys(AwesomeQR.defaultOptions).forEach((k) => {\n            if (!(k in _options)) {\n                Object.defineProperty(_options, k, { value: AwesomeQR.defaultOptions[k], enumerable: true, writable: true });\n            }\n        });\n        if (!_options.components) {\n            _options.components = AwesomeQR.defaultComponentOptions;\n        }\n        else if (typeof _options.components === \"object\") {\n            Object.keys(AwesomeQR.defaultComponentOptions).forEach((k) => {\n                if (!(k in _options.components)) {\n                    Object.defineProperty(_options.components, k, {\n                        value: AwesomeQR.defaultComponentOptions[k],\n                        enumerable: true,\n                        writable: true,\n                    });\n                }\n                else {\n                    Object.defineProperty(_options.components, k, {\n                        value: Object.assign(Object.assign({}, AwesomeQR.defaultComponentOptions[k]), _options.components[k]),\n                        enumerable: true,\n                        writable: true,\n                    });\n                }\n            });\n        }\n        if (_options.dotScale !== null && _options.dotScale !== undefined) {\n            if (_options.dotScale <= 0 || _options.dotScale > 1) {\n                throw new Error(\"dotScale should be in range (0, 1].\");\n            }\n            _options.components.data.scale = _options.dotScale;\n            _options.components.timing.scale = _options.dotScale;\n            _options.components.alignment.scale = _options.dotScale;\n        }\n        this.options = _options;\n        this.canvas = createCanvas(options.size, options.size);\n        this.canvasContext = this.canvas.getContext(\"2d\");\n        this.qrCode = new QRCodeModel(-1, this.options.correctLevel);\n        if (Number.isInteger(this.options.maskPattern)) {\n            this.qrCode.maskPattern = this.options.maskPattern;\n        }\n        if (Number.isInteger(this.options.version)) {\n            this.qrCode.typeNumber = this.options.version;\n        }\n        this.qrCode.addData(this.options.text);\n        this.qrCode.make();\n    }\n    draw() {\n        return new Promise((resolve) => this._draw().then(resolve));\n    }\n    _clear() {\n        this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    static _prepareRoundedCornerClip(canvasContext, x, y, w, h, r) {\n        canvasContext.beginPath();\n        canvasContext.moveTo(x, y);\n        canvasContext.arcTo(x + w, y, x + w, y + h, r);\n        canvasContext.arcTo(x + w, y + h, x, y + h, r);\n        canvasContext.arcTo(x, y + h, x, y, r);\n        canvasContext.arcTo(x, y, x + w, y, r);\n        canvasContext.closePath();\n    }\n    static _getAverageRGB(image) {\n        const blockSize = 5;\n        const defaultRGB = {\n            r: 0,\n            g: 0,\n            b: 0,\n        };\n        let width, height;\n        let i = -4;\n        const rgb = {\n            r: 0,\n            g: 0,\n            b: 0,\n        };\n        let count = 0;\n        height = image.naturalHeight || image.height;\n        width = image.naturalWidth || image.width;\n        const canvas = createCanvas(width, height);\n        const context = canvas.getContext(\"2d\");\n        if (!context) {\n            return defaultRGB;\n        }\n        context.drawImage(image, 0, 0);\n        let data;\n        try {\n            data = context.getImageData(0, 0, width, height);\n        }\n        catch (e) {\n            return defaultRGB;\n        }\n        while ((i += blockSize * 4) < data.data.length) {\n            if (data.data[i] > 200 || data.data[i + 1] > 200 || data.data[i + 2] > 200)\n                continue;\n            ++count;\n            rgb.r += data.data[i];\n            rgb.g += data.data[i + 1];\n            rgb.b += data.data[i + 2];\n        }\n        rgb.r = ~~(rgb.r / count);\n        rgb.g = ~~(rgb.g / count);\n        rgb.b = ~~(rgb.b / count);\n        return rgb;\n    }\n    static _drawDot(canvasContext, centerX, centerY, nSize, xyOffset = 0, dotScale = 1) {\n        canvasContext.fillRect((centerX + xyOffset) * nSize, (centerY + xyOffset) * nSize, dotScale * nSize, dotScale * nSize);\n    }\n    static _drawAlignProtector(canvasContext, centerX, centerY, nSize) {\n        canvasContext.clearRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n        canvasContext.fillRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n    }\n    static _drawAlign(canvasContext, centerX, centerY, nSize, xyOffset = 0, dotScale = 1, colorDark, hasProtector) {\n        const oldFillStyle = canvasContext.fillStyle;\n        canvasContext.fillStyle = colorDark;\n        new Array(4).fill(0).map((_, i) => {\n            AwesomeQR._drawDot(canvasContext, centerX - 2 + i, centerY - 2, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX + 2, centerY - 2 + i, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX + 2 - i, centerY + 2, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX - 2, centerY + 2 - i, nSize, xyOffset, dotScale);\n        });\n        AwesomeQR._drawDot(canvasContext, centerX, centerY, nSize, xyOffset, dotScale);\n        if (!hasProtector) {\n            canvasContext.fillStyle = \"rgba(255, 255, 255, 0.6)\";\n            new Array(2).fill(0).map((_, i) => {\n                AwesomeQR._drawDot(canvasContext, centerX - 1 + i, centerY - 1, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX + 1, centerY - 1 + i, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX + 1 - i, centerY + 1, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX - 1, centerY + 1 - i, nSize, xyOffset, dotScale);\n            });\n        }\n        canvasContext.fillStyle = oldFillStyle;\n    }\n    _draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\n        return __awaiter(this, void 0, void 0, function* () {\n            const nCount = (_a = this.qrCode) === null || _a === void 0 ? void 0 : _a.moduleCount;\n            const rawSize = this.options.size;\n            let rawMargin = this.options.margin;\n            if (rawMargin < 0 || rawMargin * 2 >= rawSize) {\n                rawMargin = 0;\n            }\n            const margin = Math.ceil(rawMargin);\n            const rawViewportSize = rawSize - 2 * rawMargin;\n            const whiteMargin = this.options.whiteMargin;\n            const backgroundDimming = this.options.backgroundDimming;\n            const nSize = Math.ceil(rawViewportSize / nCount);\n            const viewportSize = nSize * nCount;\n            const size = viewportSize + 2 * margin;\n            const mainCanvas = createCanvas(size, size);\n            const mainCanvasContext = mainCanvas.getContext(\"2d\");\n            this._clear();\n            // Translate to make the top and left margins off the viewport\n            mainCanvasContext.save();\n            mainCanvasContext.translate(margin, margin);\n            const backgroundCanvas = createCanvas(size, size);\n            const backgroundCanvasContext = backgroundCanvas.getContext(\"2d\");\n            let parsedGIFBackground = null;\n            let gifFrames = [];\n            if (!!this.options.gifBackground) {\n                const gif = parseGIF(this.options.gifBackground);\n                parsedGIFBackground = gif;\n                gifFrames = decompressFrames(gif, true);\n                if (this.options.autoColor) {\n                    let r = 0, g = 0, b = 0;\n                    let count = 0;\n                    for (let i = 0; i < gifFrames[0].colorTable.length; i++) {\n                        const c = gifFrames[0].colorTable[i];\n                        if (c[0] > 200 || c[1] > 200 || c[2] > 200)\n                            continue;\n                        if (c[0] === 0 && c[1] === 0 && c[2] === 0)\n                            continue;\n                        count++;\n                        r += c[0];\n                        g += c[1];\n                        b += c[2];\n                    }\n                    r = ~~(r / count);\n                    g = ~~(g / count);\n                    b = ~~(b / count);\n                    this.options.colorDark = `rgb(${r},${g},${b})`;\n                }\n            }\n            else if (!!this.options.backgroundImage) {\n                const backgroundImage = yield loadImage(this.options.backgroundImage);\n                if (this.options.autoColor) {\n                    const avgRGB = AwesomeQR._getAverageRGB(backgroundImage);\n                    this.options.colorDark = `rgb(${avgRGB.r},${avgRGB.g},${avgRGB.b})`;\n                }\n                backgroundCanvasContext.drawImage(backgroundImage, 0, 0, backgroundImage.width, backgroundImage.height, 0, 0, size, size);\n                backgroundCanvasContext.rect(0, 0, size, size);\n                backgroundCanvasContext.fillStyle = backgroundDimming;\n                backgroundCanvasContext.fill();\n            }\n            else {\n                backgroundCanvasContext.rect(0, 0, size, size);\n                backgroundCanvasContext.fillStyle = this.options.colorLight;\n                backgroundCanvasContext.fill();\n            }\n            const alignmentPatternCenters = QRUtil.getPatternPosition(this.qrCode.typeNumber);\n            const dataScale = ((_c = (_b = this.options.components) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.scale) || defaultScale;\n            const dataXyOffset = (1 - dataScale) * 0.5;\n            for (let row = 0; row < nCount; row++) {\n                for (let col = 0; col < nCount; col++) {\n                    const bIsDark = this.qrCode.isDark(row, col);\n                    const isBlkPosCtr = (col < 8 && (row < 8 || row >= nCount - 8)) || (col >= nCount - 8 && row < 8);\n                    const isTiming = (row == 6 && col >= 8 && col <= nCount - 8) || (col == 6 && row >= 8 && row <= nCount - 8);\n                    let isProtected = isBlkPosCtr || isTiming;\n                    for (let i = 1; i < alignmentPatternCenters.length - 1; i++) {\n                        isProtected =\n                            isProtected ||\n                                (row >= alignmentPatternCenters[i] - 2 &&\n                                    row <= alignmentPatternCenters[i] + 2 &&\n                                    col >= alignmentPatternCenters[i] - 2 &&\n                                    col <= alignmentPatternCenters[i] + 2);\n                    }\n                    const nLeft = col * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                    const nTop = row * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                    mainCanvasContext.strokeStyle = bIsDark ? this.options.colorDark : this.options.colorLight;\n                    mainCanvasContext.lineWidth = 0.5;\n                    mainCanvasContext.fillStyle = bIsDark ? this.options.colorDark : this.options.colorLight;\n                    if (alignmentPatternCenters.length === 0) {\n                        if (!isProtected) {\n                            mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize);\n                        }\n                    }\n                    else {\n                        const inAgnRange = col < nCount - 4 && col >= nCount - 4 - 5 && row < nCount - 4 && row >= nCount - 4 - 5;\n                        if (!isProtected && !inAgnRange) {\n                            // if align pattern list is empty, then it means that we don't need to leave room for the align patterns\n                            mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize);\n                        }\n                    }\n                }\n            }\n            const cornerAlignmentCenter = alignmentPatternCenters[alignmentPatternCenters.length - 1];\n            // - PROTECTORS\n            const protectorStyle = this.options.colorLight;\n            // - FINDER PROTECTORS\n            mainCanvasContext.fillStyle = protectorStyle;\n            mainCanvasContext.fillRect(0, 0, 8 * nSize, 8 * nSize);\n            mainCanvasContext.fillRect(0, (nCount - 8) * nSize, 8 * nSize, 8 * nSize);\n            mainCanvasContext.fillRect((nCount - 8) * nSize, 0, 8 * nSize, 8 * nSize);\n            // - TIMING PROTECTORS\n            if ((_e = (_d = this.options.components) === null || _d === void 0 ? void 0 : _d.timing) === null || _e === void 0 ? void 0 : _e.protectors) {\n                mainCanvasContext.fillRect(8 * nSize, 6 * nSize, (nCount - 8 - 8) * nSize, nSize);\n                mainCanvasContext.fillRect(6 * nSize, 8 * nSize, nSize, (nCount - 8 - 8) * nSize);\n            }\n            // - CORNER ALIGNMENT PROTECTORS\n            if ((_g = (_f = this.options.components) === null || _f === void 0 ? void 0 : _f.cornerAlignment) === null || _g === void 0 ? void 0 : _g.protectors) {\n                AwesomeQR._drawAlignProtector(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize);\n            }\n            // - ALIGNMENT PROTECTORS\n            if ((_j = (_h = this.options.components) === null || _h === void 0 ? void 0 : _h.alignment) === null || _j === void 0 ? void 0 : _j.protectors) {\n                for (let i = 0; i < alignmentPatternCenters.length; i++) {\n                    for (let j = 0; j < alignmentPatternCenters.length; j++) {\n                        const agnX = alignmentPatternCenters[j];\n                        const agnY = alignmentPatternCenters[i];\n                        if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                            continue;\n                        }\n                        else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                            continue;\n                        }\n                        else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                            continue;\n                        }\n                        else {\n                            AwesomeQR._drawAlignProtector(mainCanvasContext, agnX, agnY, nSize);\n                        }\n                    }\n                }\n            }\n            // - FINDER\n            mainCanvasContext.fillStyle = this.options.colorDark;\n            mainCanvasContext.fillRect(0, 0, 7 * nSize, nSize);\n            mainCanvasContext.fillRect((nCount - 7) * nSize, 0, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, 6 * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect((nCount - 7) * nSize, 6 * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, (nCount - 7) * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, (nCount - 7 + 6) * nSize, 7 * nSize, nSize);\n            mainCanvasContext.fillRect(0, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(6 * nSize, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect((nCount - 7) * nSize, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect((nCount - 7 + 6) * nSize, 0, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(0, (nCount - 7) * nSize, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(6 * nSize, (nCount - 7) * nSize, nSize, 7 * nSize);\n            mainCanvasContext.fillRect(2 * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n            mainCanvasContext.fillRect((nCount - 7 + 2) * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n            mainCanvasContext.fillRect(2 * nSize, (nCount - 7 + 2) * nSize, 3 * nSize, 3 * nSize);\n            // - TIMING\n            const timingScale = ((_l = (_k = this.options.components) === null || _k === void 0 ? void 0 : _k.timing) === null || _l === void 0 ? void 0 : _l.scale) || defaultScale;\n            const timingXyOffset = (1 - timingScale) * 0.5;\n            for (let i = 0; i < nCount - 8; i += 2) {\n                AwesomeQR._drawDot(mainCanvasContext, 8 + i, 6, nSize, timingXyOffset, timingScale);\n                AwesomeQR._drawDot(mainCanvasContext, 6, 8 + i, nSize, timingXyOffset, timingScale);\n            }\n            // - CORNER ALIGNMENT PROTECTORS\n            const cornerAlignmentScale = ((_o = (_m = this.options.components) === null || _m === void 0 ? void 0 : _m.cornerAlignment) === null || _o === void 0 ? void 0 : _o.scale) || defaultScale;\n            const cornerAlignmentXyOffset = (1 - cornerAlignmentScale) * 0.5;\n            AwesomeQR._drawAlign(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize, cornerAlignmentXyOffset, cornerAlignmentScale, this.options.colorDark, ((_q = (_p = this.options.components) === null || _p === void 0 ? void 0 : _p.cornerAlignment) === null || _q === void 0 ? void 0 : _q.protectors) || false);\n            // - ALIGNEMNT\n            const alignmentScale = ((_s = (_r = this.options.components) === null || _r === void 0 ? void 0 : _r.alignment) === null || _s === void 0 ? void 0 : _s.scale) || defaultScale;\n            const alignmentXyOffset = (1 - alignmentScale) * 0.5;\n            for (let i = 0; i < alignmentPatternCenters.length; i++) {\n                for (let j = 0; j < alignmentPatternCenters.length; j++) {\n                    const agnX = alignmentPatternCenters[j];\n                    const agnY = alignmentPatternCenters[i];\n                    if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                        continue;\n                    }\n                    else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                        continue;\n                    }\n                    else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                        continue;\n                    }\n                    else {\n                        AwesomeQR._drawAlign(mainCanvasContext, agnX, agnY, nSize, alignmentXyOffset, alignmentScale, this.options.colorDark, ((_u = (_t = this.options.components) === null || _t === void 0 ? void 0 : _t.alignment) === null || _u === void 0 ? void 0 : _u.protectors) || false);\n                    }\n                }\n            }\n            // Fill the margin\n            if (whiteMargin) {\n                mainCanvasContext.fillStyle = this.options.backgroundColor;\n                mainCanvasContext.fillRect(-margin, -margin, size, margin);\n                mainCanvasContext.fillRect(-margin, viewportSize, size, margin);\n                mainCanvasContext.fillRect(viewportSize, -margin, margin, size);\n                mainCanvasContext.fillRect(-margin, -margin, margin, size);\n            }\n            if (!!this.options.logoImage) {\n                const logoImage = yield loadImage(this.options.logoImage);\n                let logoScale = this.options.logoScale;\n                let logoMargin = this.options.logoMargin;\n                let logoCornerRadius = this.options.logoCornerRadius;\n                if (logoScale <= 0 || logoScale >= 1.0) {\n                    logoScale = 0.2;\n                }\n                if (logoMargin < 0) {\n                    logoMargin = 0;\n                }\n                if (logoCornerRadius < 0) {\n                    logoCornerRadius = 0;\n                }\n                const logoSize = viewportSize * logoScale;\n                const x = 0.5 * (size - logoSize);\n                const y = x;\n                // Restore the canvas\n                // After restoring, the top and left margins should be taken into account\n                mainCanvasContext.restore();\n                // Clean the area that the logo covers (including margins)\n                mainCanvasContext.fillStyle = this.options.logoBackgroundColor;\n                mainCanvasContext.save();\n                AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x - logoMargin, y - logoMargin, logoSize + 2 * logoMargin, logoSize + 2 * logoMargin, logoCornerRadius + logoMargin);\n                mainCanvasContext.clip();\n                const oldGlobalCompositeOperation = mainCanvasContext.globalCompositeOperation;\n                mainCanvasContext.globalCompositeOperation = \"destination-out\";\n                mainCanvasContext.fill();\n                mainCanvasContext.globalCompositeOperation = oldGlobalCompositeOperation;\n                mainCanvasContext.restore();\n                // Draw logo image\n                mainCanvasContext.save();\n                AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x, y, logoSize, logoSize, logoCornerRadius);\n                mainCanvasContext.clip();\n                mainCanvasContext.drawImage(logoImage, x, y, logoSize, logoSize);\n                mainCanvasContext.restore();\n                // Re-translate the canvas to translate the top and left margins into invisible area\n                mainCanvasContext.save();\n                mainCanvasContext.translate(margin, margin);\n            }\n            if (!!parsedGIFBackground) {\n                let gifOutput;\n                // Reuse in order to apply the patch\n                let backgroundCanvas;\n                let backgroundCanvasContext;\n                let patchCanvas;\n                let patchCanvasContext;\n                let patchData;\n                gifFrames.forEach(function (frame) {\n                    if (!gifOutput) {\n                        gifOutput = new GIFEncoder(rawSize, rawSize);\n                        gifOutput.setDelay(frame.delay);\n                        gifOutput.setRepeat(0);\n                    }\n                    const { width, height } = frame.dims;\n                    if (!backgroundCanvas) {\n                        backgroundCanvas = createCanvas(width, height);\n                        backgroundCanvasContext = backgroundCanvas.getContext(\"2d\");\n                        backgroundCanvasContext.rect(0, 0, backgroundCanvas.width, backgroundCanvas.height);\n                        backgroundCanvasContext.fillStyle = \"#ffffff\";\n                        backgroundCanvasContext.fill();\n                    }\n                    if (!patchCanvas || !patchData || width !== patchCanvas.width || height !== patchCanvas.height) {\n                        patchCanvas = createCanvas(width, height);\n                        patchCanvasContext = patchCanvas.getContext(\"2d\");\n                        patchData = patchCanvasContext.createImageData(width, height);\n                    }\n                    patchData.data.set(frame.patch);\n                    patchCanvasContext.putImageData(patchData, 0, 0);\n                    backgroundCanvasContext.drawImage(patchCanvas, frame.dims.left, frame.dims.top);\n                    const unscaledCanvas = createCanvas(size, size);\n                    const unscaledCanvasContext = unscaledCanvas.getContext(\"2d\");\n                    unscaledCanvasContext.drawImage(backgroundCanvas, 0, 0, size, size);\n                    unscaledCanvasContext.rect(0, 0, size, size);\n                    unscaledCanvasContext.fillStyle = backgroundDimming;\n                    unscaledCanvasContext.fill();\n                    unscaledCanvasContext.drawImage(mainCanvas, 0, 0, size, size);\n                    // Scale the final image\n                    const outCanvas = createCanvas(rawSize, rawSize);\n                    const outCanvasContext = outCanvas.getContext(\"2d\");\n                    outCanvasContext.drawImage(unscaledCanvas, 0, 0, rawSize, rawSize);\n                    gifOutput.addFrame(outCanvasContext.getImageData(0, 0, outCanvas.width, outCanvas.height).data);\n                });\n                if (!gifOutput) {\n                    throw new Error(\"No frames.\");\n                }\n                gifOutput.finish();\n                if (isElement(this.canvas)) {\n                    const u8array = gifOutput.stream().toFlattenUint8Array();\n                    const binary = u8array.reduce((bin, u8) => bin + String.fromCharCode(u8), \"\");\n                    return Promise.resolve(`data:image/gif;base64,${window.btoa(binary)}`);\n                }\n                return Promise.resolve(Buffer.from(gifOutput.stream().toFlattenUint8Array()));\n            }\n            else {\n                // Swap and merge the foreground and the background\n                backgroundCanvasContext.drawImage(mainCanvas, 0, 0, size, size);\n                mainCanvasContext.drawImage(backgroundCanvas, -margin, -margin, size, size);\n                // Scale the final image\n                const outCanvas = createCanvas(rawSize, rawSize); //document.createElement(\"canvas\");\n                const outCanvasContext = outCanvas.getContext(\"2d\");\n                outCanvasContext.drawImage(mainCanvas, 0, 0, rawSize, rawSize);\n                this.canvas = outCanvas;\n                if (isElement(this.canvas)) {\n                    return Promise.resolve(this.canvas.toDataURL());\n                }\n                return Promise.resolve(this.canvas.toBuffer());\n            }\n        });\n    }\n}\nAwesomeQR.CorrectLevel = QRErrorCorrectLevel;\nAwesomeQR.defaultComponentOptions = {\n    data: {\n        scale: 0.4,\n    },\n    timing: {\n        scale: 0.5,\n        protectors: false,\n    },\n    alignment: {\n        scale: 0.5,\n        protectors: false,\n    },\n    cornerAlignment: {\n        scale: 0.5,\n        protectors: true,\n    },\n};\nAwesomeQR.defaultOptions = {\n    text: \"\",\n    size: 400,\n    margin: 20,\n    colorDark: \"#000000\",\n    colorLight: \"rgba(255, 255, 255, 0.6)\",\n    correctLevel: QRErrorCorrectLevel.M,\n    backgroundImage: undefined,\n    backgroundDimming: \"rgba(0,0,0,0)\",\n    logoImage: undefined,\n    logoScale: 0.2,\n    logoMargin: 4,\n    logoCornerRadius: 8,\n    whiteMargin: true,\n    components: AwesomeQR.defaultComponentOptions,\n    autoColor: true,\n    logoBackgroundColor: '#ffffff',\n    backgroundColor: '#ffffff',\n};\nfunction isElement(obj) {\n    try {\n        //Using W3 DOM2 (works for FF, Opera and Chrome)\n        return obj instanceof HTMLElement;\n    }\n    catch (e) {\n        //Browsers not supporting W3 DOM2 don't have HTMLElement and\n        //an exception is thrown and we end up here. Testing some\n        //properties that all elements have (works on IE7)\n        return (typeof obj === \"object\" &&\n            obj.nodeType === 1 &&\n            typeof obj.style === \"object\" &&\n            typeof obj.ownerDocument === \"object\");\n    }\n}\n","import { render } from \"./vue-qr.vue?vue&type=template&id=370dfff1\"\nimport script from \"./vue-qr.vue?vue&type=script&lang=js\"\nexport * from \"./vue-qr.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\YYyan\\\\vue-1\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Test.vue?vue&type=template&id=7923a024\"\nimport script from \"./Test.vue?vue&type=script&lang=js\"\nexport * from \"./Test.vue?vue&type=script&lang=js\"\n\nimport \"./Test.vue?vue&type=style&index=0&id=7923a024&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\YYyan\\\\vue-1\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["parseFont","exports","width","height","Object","assign","document","createElement","weights","styles","variants","stretches","units","string","weightRe","RegExp","styleRe","variantRe","stretchRe","sizeFamilyRe","cache","defaultHeight","module","str","sizeFamily","exec","font","weight","style","stretch","variant","size","parseFloat","unit","family","replace","substr","substring","index","defineProperty","value","loop","conditional","parse","stream","schema","result","arguments","length","undefined","parent","Array","isArray","forEach","partSchema","key","keys","conditionFunc","continueFunc","arr","lastStreamPos","pos","newParent","push","readBits","readArray","readUnsigned","readString","peekBytes","readBytes","peekByte","readByte","buildStream","uint8Data","data","offset","subarray","from","map","String","fromCharCode","join","littleEndian","bytes","byteSize","totalOrFunc","total","parser","i","subBitsTotal","bits","startIndex","Math","pow","_byte","reduce","res","def","_","_uint","subBlocksSchema","blocks","terminator","chunks","streamSize","availableSize","Uint8Array","set","gceSchema","gce","codes","extras","future","disposal","userInput","transparentColorGiven","delay","transparentColorIndex","imageSchema","image","code","descriptor","left","top","lct","exists","interlaced","sort","minCodeSize","textSchema","text","blockSize","preData","applicationSchema","application","id","commentSchema","comment","header","signature","version","lsd","gct","resolution","backgroundColorIndex","pixelAspectRatio","frames","nextCode","_default","class","span","type","round","handleInsert","handleUpdate","test","tableData","border","prop","label","align","default","scope","href","client_host","row","num","target","name","margin","logoSrc","icon","handleEdit","handleDelete","title","editVisible","footer","handleInsertPost","editData","age","other","checkListVisible","handleEditPost","model","checkList","parts","part","prepend","circle","addPart","deletePart","contents","content","standard","addContent","$index","deleteContent","src","imgUrl","toBoolean","val","readAsArrayBuffer","url","callback","Promise","resolve","reject","xhr","XMLHttpRequest","responseType","onload","reader","FileReader","onloadend","response","open","send","deinterlace","pixels","newPixels","rows","cpRow","toRow","fromRow","fromPixels","slice","splice","apply","concat","offsets","steps","pass","lzw","pixelCount","MAX_STACK_SIZE","nullCode","npix","available","clear","code_mask","code_size","end_of_information","in_code","old_code","data_size","dstPixels","prefix","suffix","pixelStack","datum","first","pi","bi","parseGIF","arrayBuffer","byteData","generatePatch","totalPixels","patchData","Uint8ClampedArray","colorIndex","color","colorTable","transparentIndex","decompressFrame","frame","buildImagePatch","console","warn","resultImage","dims","disposalType","patch","decompressFrames","parsedGif","buildImagePatches","filter","f","checkQRVersion","sText","nCorrectLevel","_getUTF8Length","nLimit","QRErrorCorrectLevel","L","QRCodeLimitLength","M","Q","H","_getTypeNumber","nType","len","Error","replacedText","encodeURI","toString","Number","QR8bitByte","constructor","this","mode","QRMode","MODE_8BIT_BYTE","parsedData","byteArrays","l","byteArray","charCodeAt","prototype","unshift","getLength","write","buffer","put","QRCodeModel","typeNumber","errorCorrectLevel","moduleCount","dataList","addData","newData","dataCache","isDark","col","modules","getModuleCount","make","makeImpl","getBestMaskPattern","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","isInteger","values","QRMaskPattern","includes","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","getPatternPosition","j","getBCHTypeNumber","mod","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","dark","mask","getMask","static","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","getLengthInBits","totalDataCount","dataCount","putBit","PAD0","PAD1","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","modPoly","modIndex","get","totalCodeCount","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","d","getBCHDigit","G15","G15_MASK","G18","digit","PATTERN_POSITION_TABLE","errorCorrectLength","a","multiply","QRMath","gexp","qrCode","sameCount","count","darkCount","ratio","abs","n","LOG_TABLE","EXP_TABLE","_constructor","shift","e","glog","rsBlock","getRsBlockTable","list","RS_BLOCK_TABLE","bufIndex","bit","ncycles","netsize","maxnetpos","netbiasshift","intbiasshift","intbias","gammashift","betashift","beta","betagamma","initrad","radiusbiasshift","radiusbias","initradius","radiusdec","alphabiasshift","initalpha","radbiasshift","radbias","alpharadbshift","alpharadbias","prime1","prime2","prime3","prime4","minpicturebytes","NeuQuant","samplefac","network","netindex","bias","freq","radpower","init","v","Int32Array","Float64Array","unbiasnet","altersingle","alpha","b","g","alterneigh","radius","p","lo","hi","min","k","m","contest","dist","biasdist","betafreq","bestd","bestbiasd","bestpos","bestbiaspos","inxbuild","q","smallpos","smallval","previouscol","startpos","inxsearch","best","learn","step","lengthcount","alphadec","samplepixels","delta","rad","pix","buildColormap","getColormap","lookupRGB","EOF","BITS","HSIZE","masks","LZWEncoder","colorDepth","cur_accum","a_count","maxcode","g_init_bits","ClearCode","EOFCode","remaining","curPixel","n_bits","initCodeSize","accum","htab","codetab","cur_bits","free_ent","clear_flg","char_out","outs","flush_char","cl_block","cl_hash","output","hsize","compress","init_bits","fcode","ent","disp","hsize_reg","hshift","MAXCODE","nextPixel","outer_loop","encode","writeByte","writeBytes","ByteArray","page","pages","newPage","pageSize","charMap","GIFEncoder","transparent","transIndex","repeat","indexedPixels","colorTab","neuQuant","usedEntry","palSize","dispose","firstFrame","sample","dither","globalPalette","out","cursor","getData","rv","toFlattenUint8Array","chunk","flatten","acc","lastLength","writeUTFBytes","array","setDelay","milliseconds","setFrameRate","fps","setDispose","disposalCode","setRepeat","setTransparent","addFrame","imageData","getImagePixels","analyzePixels","writeHeader","writeLSD","writePalette","writeNetscapeExt","writeGraphicCtrlExt","writeImageDesc","writePixels","finish","setQuality","quality","setDither","setGlobalPalette","palette","getGlobalPalette","ditherPixels","match","indexPixels","findClosest","imgq","nPix","findClosestRGB","kernel","serpentine","kernels","FalseFloydSteinberg","FloydSteinberg","Stucki","Atkinson","ds","direction","y","x","xend","idx","r1","g1","b1","r2","g2","b2","er","eg","eb","end","x1","y1","used","minpos","dmin","dr","dg","db","w","h","srcPos","transp","writeShort","pValue","enc","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","next","rejected","done","then","defaultScale","loadImage","img","Image","cleanup","onerror","setAttribute","AwesomeQR","options","_options","defaultOptions","enumerable","writable","components","defaultComponentOptions","dotScale","scale","timing","alignment","canvas","canvasContext","getContext","correctLevel","draw","_draw","_clear","clearRect","beginPath","moveTo","arcTo","closePath","defaultRGB","rgb","naturalHeight","naturalWidth","context","drawImage","getImageData","centerX","centerY","nSize","xyOffset","fillRect","colorDark","hasProtector","oldFillStyle","fillStyle","fill","_drawDot","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","nCount","rawSize","rawMargin","ceil","rawViewportSize","whiteMargin","backgroundDimming","viewportSize","mainCanvas","mainCanvasContext","save","translate","backgroundCanvas","backgroundCanvasContext","parsedGIFBackground","gifFrames","gifBackground","gif","autoColor","backgroundImage","avgRGB","_getAverageRGB","rect","colorLight","alignmentPatternCenters","dataScale","dataXyOffset","bIsDark","isBlkPosCtr","isTiming","isProtected","nLeft","nTop","strokeStyle","lineWidth","inAgnRange","cornerAlignmentCenter","protectorStyle","protectors","cornerAlignment","_drawAlignProtector","agnX","agnY","timingScale","timingXyOffset","cornerAlignmentScale","cornerAlignmentXyOffset","_drawAlign","alignmentScale","alignmentXyOffset","backgroundColor","logoImage","logoScale","logoMargin","logoCornerRadius","logoSize","restore","logoBackgroundColor","_prepareRoundedCornerClip","clip","oldGlobalCompositeOperation","globalCompositeOperation","gifOutput","patchCanvas","patchCanvasContext","createImageData","putImageData","unscaledCanvas","unscaledCanvasContext","outCanvas","outCanvasContext","isElement","u8array","binary","bin","u8","window","btoa","Buffer","toDataURL","toBuffer","obj","HTMLElement","nodeType","ownerDocument","CorrectLevel","props","required","qid","bgSrc","background","gifBgSrc","Boolean","binarize","binarizeThreshold","Function","bindElement","watch","$props","deep","handler","main","mounted","methods","async","gifImg","logoImg","render","bgImg","that","dataUri","__exports__","vueQr","HeadRouter","setup","location","host","server_host","select_num","successBox","msg","message","errorBox","catch","error","log","check_list","JSON","new_part","new_content","$nextTick"],"sourceRoot":""}